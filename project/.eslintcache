[{"C:\\Users\\user\\medicalTest\\project\\src\\index.js":"1","C:\\Users\\user\\medicalTest\\project\\src\\reportWebVitals.js":"2","C:\\Users\\user\\medicalTest\\project\\src\\App.js":"3","C:\\Users\\user\\medicalTest\\project\\src\\User\\ResetPasswordUI.js":"4","C:\\Users\\user\\medicalTest\\project\\src\\util\\AuthRoute.js":"5","C:\\Users\\user\\medicalTest\\project\\src\\User\\LoginUI.js":"6","C:\\Users\\user\\medicalTest\\project\\src\\SystemAdmin\\ViewAllAccountUI.js":"7","C:\\Users\\user\\medicalTest\\project\\src\\Patient\\HomepageUI.js":"8","C:\\Users\\user\\medicalTest\\project\\src\\Patient\\RegisterUI.js":"9","C:\\Users\\user\\medicalTest\\project\\src\\User\\myProfilePageUI.js":"10","C:\\Users\\user\\medicalTest\\project\\src\\SystemAdmin\\CreateAccountUI.js":"11","C:\\Users\\user\\medicalTest\\project\\src\\util\\Auth.js":"12","C:\\Users\\user\\medicalTest\\project\\src\\firebase.js":"13","C:\\Users\\user\\medicalTest\\project\\src\\SystemAdmin\\App.styles.js":"14","C:\\Users\\user\\medicalTest\\project\\src\\components\\Navbar\\NavigationbarSA.js":"15","C:\\Users\\user\\medicalTest\\project\\src\\components\\navbarUI.js":"16","C:\\Users\\user\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.js":"17","C:\\Users\\user\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.styles.js":"18"},{"size":583,"mtime":1608911994242,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1608946936667,"results":"21","hashOfConfig":"20"},{"size":1478,"mtime":1608995413848,"results":"22","hashOfConfig":"20"},{"size":2447,"mtime":1609039199279,"results":"23","hashOfConfig":"20"},{"size":413,"mtime":1608911994244,"results":"24","hashOfConfig":"20"},{"size":2919,"mtime":1608911994233,"results":"25","hashOfConfig":"20"},{"size":1150,"mtime":1608911994232,"results":"26","hashOfConfig":"20"},{"size":5249,"mtime":1609041695836,"results":"27","hashOfConfig":"20"},{"size":6975,"mtime":1608911994229,"results":"28","hashOfConfig":"20"},{"size":2252,"mtime":1609038925690,"results":"29","hashOfConfig":"20"},{"size":1182,"mtime":1608911994231,"results":"30","hashOfConfig":"20"},{"size":1342,"mtime":1608911994243,"results":"31","hashOfConfig":"20"},{"size":598,"mtime":1608911994241,"results":"32","hashOfConfig":"20"},{"size":243,"mtime":1608911994231,"results":"33","hashOfConfig":"20"},{"size":903,"mtime":1609039233217,"results":"34","hashOfConfig":"20"},{"size":820,"mtime":1609038984293,"results":"35","hashOfConfig":"20"},{"size":1614,"mtime":1608946590347,"results":"36","hashOfConfig":"20"},{"size":2948,"mtime":1608946590349,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"7y0i02",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\user\\medicalTest\\project\\src\\index.js",[],["81","82"],"C:\\Users\\user\\medicalTest\\project\\src\\reportWebVitals.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\App.js",["83","84","85","86","87","88"],"import './App.css';\r\nimport LoginUI from './User/LoginUI';\r\nimport RegisterUI  from './Patient/RegisterUI';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport ResetPasswordUI from './User/ResetPasswordUI';\r\nimport myProfileUI from \"./User/myProfilePageUI\";\r\nimport HomepageUI from './Patient/HomepageUI';\r\nimport { AuthProvider } from './util/Auth';\r\nimport PrivateRoute from \"./util/AuthRoute\";\r\nimport ViewAllAccountUI from \"./SystemAdmin/ViewAllAccountUI\";\r\nimport CreateAccountUI from \"./SystemAdmin/CreateAccountUI\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n      <Router>\r\n      <AuthProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={HomepageUI}/>\r\n          // User view / edit profile page\r\n          <PrivateRoute path=\"/myProfile\" component={myProfileUI}/>\r\n          // Patient Create New Account Page\r\n          <Route path=\"/register\" component={RegisterUI}/>\r\n          // User Reset Password Page\r\n          <Route path=\"/resetPassword\" component={ResetPasswordUI}/>\r\n          // User Login Page\r\n          <Route path=\"/login\" component={LoginUI}/>\r\n          // Sys admin view all account page\r\n          <Route path=\"/viewAllAccount\" component={ViewAllAccountUI}/>\r\n          // Sys admin create account page\r\n          <PrivateRoute path=\"/createAccount\" component={CreateAccountUI}/>\r\n        </Switch>\r\n        </AuthProvider>\r\n      </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\medicalTest\\project\\src\\User\\ResetPasswordUI.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\util\\AuthRoute.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\User\\LoginUI.js",["89"],"import React, {useState} from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { auth } from '../firebase';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nfunction LoginUI() {\r\n    //useStates\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await auth.signInWithEmailAndPassword(Email, Password);\r\n            history.push(\"/\");\r\n        }catch(error) {\r\n            return setError(error.message);\r\n        }\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div style={{backgroundImage: `url(\"https://i.ibb.co/yRDqQHh/pexels-karolina-grabowska-4021769.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'}}>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h1 className= \"text-center mb-4\" style={{\r\n                     fontSize: '2em'\r\n                 }}>MyAppointment</h1>\r\n                 <h2 className= \"text-center mb-4\"> Login</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control \r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"password\">\r\n                        <Form.Label>Passsword</Form.Label>\r\n                        <Form.Control \r\n                        value={Password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Button className=\"w-100\" type=\"submit\">Login</Button>\r\n                 </Form>\r\n                 <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/resetPassword\">Forgot Password?</Link>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Don't have an account? <Link to=\"/register\"><u>Join Now!</u></Link>\r\n            </div>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginUI\r\n","C:\\Users\\user\\medicalTest\\project\\src\\SystemAdmin\\ViewAllAccountUI.js",["90","91","92","93","94"],"import React from 'react'\r\nimport {Form, Button, Card, Container} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\nimport NaviBar from \"../components/Navbar/NavigationbarSA\";\r\nimport Sidebar from '../components/Sidebar/Sidebar';\r\nimport * as s from './App.styles';\r\n\r\nclass ViewAllAccountUI extends React.Component\r\n{\r\n   // display UI\r\n   render()\r\n   {\r\n      // sidebar items\r\n      const menuItems = [\r\n         {name: 'My Profile', to: '/myProfile', icon: 'icons/myProfile.svg', \r\n            subMenuItems: [\r\n               {name: 'Change Password', to: '/myProfile'}\r\n            ]},\r\n\r\n         {name: 'Manage Account', to: '/viewAllAccount', icon: 'icons/manageAccount.svg', \r\n            subMenuItems: [\r\n               {name: 'Create New Account', to: '/createAccount'}\r\n            ]}\r\n      ];\r\n\r\n      return (\r\n         <div style={{backgroundColor: '#98AFC7'}}>\r\n            <NaviBar/>\r\n            <s.AppS>\r\n               <Sidebar\r\n               menuItems={menuItems}\r\n               />\r\n               <h2>My Profile</h2>\r\n            </s.AppS>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ViewAllAccountUI","C:\\Users\\user\\medicalTest\\project\\src\\Patient\\HomepageUI.js",["95","96","97","98","99"],"C:\\Users\\user\\medicalTest\\project\\src\\Patient\\RegisterUI.js",["100","101"],"import React, { useState, useRef } from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory} from 'react-router-dom';\r\nimport { auth, firestore } from '../firebase';\r\n\r\nfunction RegisterUI() {\r\n\r\n   //useStates\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [Password, setPassword] = useState(\"\"); \r\n   const [ConfirmPassword, setConfirmPassword] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n   const history = useHistory();\r\n\r\n   const FNameRef = useRef();\r\n   const LNameRef = useRef();\r\n   const NRICRef = useRef();\r\n   const AddressRef = useRef();\r\n   const DOBRef = useRef();\r\n   const EmailRef = useRef();\r\n   const TelephoneRef = useRef();\r\n   const PasswordRef = useRef();\r\n   const ConfirmPasswordRef = useRef();\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      if(Password !== ConfirmPassword)\r\n      {\r\n         return setError(\"Passwords do not match\")\r\n      }\r\n      try{\r\n         setError(\"\");\r\n         setLoading(true);\r\n         await auth.createUserWithEmailAndPassword(Email, Password)\r\n         \r\n         firestore.collection('Users').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            NRIC: NRIC,\r\n            Address: Address,\r\n            DOB: DOB,\r\n            Email: Email,\r\n            Telephone: Telephone\r\n         })\r\n         .then(() => {\r\n            alert(\"Account Registered Successfully!\");\r\n         })\r\n      } catch(error){\r\n         return setError(error.message);\r\n      }\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setNRIC(\"\");\r\n      setAddress(\"\");\r\n      setDOB(\"\");\r\n      setEmail(\"\");\r\n      setTelephone(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setError(\"\");\r\n      setLoading(false);\r\n      };\r\n\r\n   return (\r\n      <div style={{backgroundImage: `url(\"https://i.ibb.co/yRDqQHh/pexels-karolina-grabowska-4021769.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'}}>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"500px\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">Create your Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={FNameRef}\r\n                        value={FirstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={LNameRef}\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"NRIC\">\r\n                        <Form.Label>NRIC</Form.Label>\r\n                        <Form.Control\r\n                        ref={NRICRef}\r\n                        value={NRIC}\r\n                        onChange={(e) => setNRIC(e.target.value)} \r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={AddressRef}\r\n                        value={Address}\r\n                        onChange={(e) => setAddress(e.target.value)} \r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"DOB\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control \r\n                        ref={DOBRef}\r\n                        value={DOB}\r\n                        onChange={(e) => setDOB(e.target.value)} \r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={EmailRef}\r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        ref={TelephoneRef}\r\n                        value={Telephone}\r\n                        onChange={(e) => setTelephone(e.target.value)} \r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n                     <hr  style={{\r\n                                borderColor : '#000000',\r\n                                marginTop : '50px'\r\n                            }}/>\r\n                     <Form.Group id = \"Password\">\r\n                        <Form.Label>Passsword</Form.Label>\r\n                        <Form.Control \r\n                        ref={PasswordRef}\r\n                        value={Password}\r\n                        onChange={(e) => setPassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"ConfirmPassword\">\r\n                        <Form.Label>Confirm Passsword</Form.Label>\r\n                        <Form.Control \r\n                        ref={ConfirmPasswordRef}\r\n                        value={ConfirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                 </Form>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/login\"><u>Login!</u></Link>\r\n            </div>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default RegisterUI\r\n","C:\\Users\\user\\medicalTest\\project\\src\\User\\myProfilePageUI.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\SystemAdmin\\CreateAccountUI.js",["102","103","104","105","106"],"import React from 'react'\r\nimport {Form, Button, Card, Container} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\nimport NaviBar from \"../components/Navbar/NavigationbarSA\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\nimport * as s from './App.styles';\r\n\r\nclass CreateAccountUI extends React.Component\r\n{\r\n   // display UI\r\n   render()\r\n   {\r\n      // sidebar items\r\n      const menuItems = [\r\n         {name: 'My Profile', to: '/myProfile', icon: 'icons/myProfile.svg', \r\n            subMenuItems: [\r\n               {name: 'Change Password', to: '/myProfile'}\r\n            ]},\r\n         {name: 'Manage Account', to: '/viewAllAccount', icon: 'icons/manageAccount.svg', \r\n            subMenuItems: [\r\n               {name: 'Create New Account', to: '/createAccount'}\r\n            ]}\r\n      ];\r\n\r\n      return (\r\n         <div style={{backgroundColor: '#98AFC7'}}>\r\n            <NaviBar/>\r\n            <s.AppS>\r\n               <Sidebar\r\n               menuItems={menuItems}\r\n               />\r\n               <h2>My Profile</h2>\r\n               <h2> test </h2>\r\n            </s.AppS>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default CreateAccountUI\r\n\r\n","C:\\Users\\user\\medicalTest\\project\\src\\util\\Auth.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\firebase.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\SystemAdmin\\App.styles.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\components\\Navbar\\NavigationbarSA.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\components\\navbarUI.js",[],"C:\\Users\\user\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.js",["107"],"import React, {useState, useEffect} from 'react';\r\nimport * as s from './Sidebar.styles';\r\n\r\nconst Sidebar = props => {\r\n    const {\r\n        menuItems = []\r\n    } = props;\r\n\r\n    // State\r\n    const [selected, setSelectedMenuItem] = useState(menuItems[0].name);\r\n    const [isSidebarClose, setSidebarState] = useState(true);\r\n\r\n    // Change color for font and border for selected items\r\n    const handleMenuItemClick = name => {\r\n        setSelectedMenuItem(name)\r\n    }\r\n\r\n    // menu items\r\n    const menuItemsJSX = menuItems.map((item, index) => {\r\n        const isItemSelected = selected === item.name;\r\n\r\n        const hasSubMenu = !!item.subMenuItems.length;\r\n\r\n        return(\r\n            <s.MenuItem \r\n                key = {index}\r\n                selected = {isItemSelected}\r\n                onClick={() => handleMenuItemClick(item.name)}\r\n                isSidebarClose={isSidebarClose}\r\n            >\r\n                <s.Icon isSidebarClose={isSidebarClose} src={item.icon}/>\r\n                <s.Text isSidebarClose={isSidebarClose}>{item.name}</s.Text>\r\n                {hasSubMenu && (\r\n                    <s.DropdownIcon isSidebarClose={isSidebarClose}/>\r\n                )}\r\n            </s.MenuItem>\r\n        )\r\n    });\r\n\r\n\r\n\r\n    return ( \r\n        <s.SidebarContainer isSidebarClose={isSidebarClose}> \r\n            <s.TogglerContainer onClick={() => setSidebarState(!isSidebarClose)}>\r\n                <s.Toggler />\r\n            </s.TogglerContainer>\r\n            <s.MenuItemContainer>{menuItemsJSX}</s.MenuItemContainer>\r\n        </s.SidebarContainer>\r\n    );\r\n\r\n}\r\n\r\nexport default Sidebar","C:\\Users\\user\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.styles.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":19,"column":64,"nodeType":"114","endLine":21,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":21,"column":68,"nodeType":"114","endLine":23,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":23,"column":59,"nodeType":"114","endLine":25,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":25,"column":69,"nodeType":"114","endLine":27,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":27,"column":53,"nodeType":"114","endLine":29,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":29,"column":71,"nodeType":"114","endLine":31,"endColumn":11},{"ruleId":"115","severity":1,"message":"116","line":10,"column":12,"nodeType":"117","messageId":"118","endLine":10,"endColumn":19},{"ruleId":"115","severity":1,"message":"119","line":2,"column":9,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},{"ruleId":"115","severity":1,"message":"120","line":2,"column":15,"nodeType":"117","messageId":"118","endLine":2,"endColumn":21},{"ruleId":"115","severity":1,"message":"121","line":2,"column":23,"nodeType":"117","messageId":"118","endLine":2,"endColumn":27},{"ruleId":"115","severity":1,"message":"122","line":2,"column":29,"nodeType":"117","messageId":"118","endLine":2,"endColumn":38},{"ruleId":"115","severity":1,"message":"123","line":3,"column":9,"nodeType":"117","messageId":"118","endLine":3,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":21,"column":37,"nodeType":"126","endLine":21,"endColumn":76},{"ruleId":"124","severity":1,"message":"125","line":32,"column":33,"nodeType":"126","endLine":32,"endColumn":72},{"ruleId":"124","severity":1,"message":"125","line":43,"column":33,"nodeType":"126","endLine":43,"endColumn":72},{"ruleId":"124","severity":1,"message":"125","line":58,"column":37,"nodeType":"126","endLine":58,"endColumn":76},{"ruleId":"124","severity":1,"message":"125","line":69,"column":33,"nodeType":"126","endLine":69,"endColumn":72},{"ruleId":"115","severity":1,"message":"116","line":19,"column":11,"nodeType":"117","messageId":"118","endLine":19,"endColumn":18},{"ruleId":"115","severity":1,"message":"127","line":20,"column":10,"nodeType":"117","messageId":"118","endLine":20,"endColumn":17},{"ruleId":"115","severity":1,"message":"119","line":2,"column":9,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},{"ruleId":"115","severity":1,"message":"120","line":2,"column":15,"nodeType":"117","messageId":"118","endLine":2,"endColumn":21},{"ruleId":"115","severity":1,"message":"121","line":2,"column":23,"nodeType":"117","messageId":"118","endLine":2,"endColumn":27},{"ruleId":"115","severity":1,"message":"122","line":2,"column":29,"nodeType":"117","messageId":"118","endLine":2,"endColumn":38},{"ruleId":"115","severity":1,"message":"123","line":3,"column":9,"nodeType":"117","messageId":"118","endLine":3,"endColumn":13},{"ruleId":"115","severity":1,"message":"128","line":1,"column":26,"nodeType":"117","messageId":"118","endLine":1,"endColumn":35},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'history' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]