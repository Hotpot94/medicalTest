[{"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\index.js":"1","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\reportWebVitals.js":"2","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.js":"3","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\noMatch.js":"4","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\Auth.js":"5","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\AuthRoute.js":"6","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\LoginUI.js":"7","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SysAdm.js":"8","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ResetPasswordUI.js":"9","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MedDoc.js":"10","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\Patient.js":"11","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MedAdm.js":"12","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\RegisterUI.js":"13","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\PRoute.js":"14","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MDRoute.js":"15","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MARoute.js":"16","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\firebase.js":"17","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.styles.js":"18","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\IdleTimerContainer.js":"19","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\SARoute.js":"20","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.js":"21","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Navbar\\NavigationbarSA.js":"22","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\PSideBarData.js":"23","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MDSideBarData.js":"24","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\SASideBarData.js":"25","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MASideBarData.js":"26","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\PasswordStrengthIndicator.js":"27","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\PatientRoute.js":"28","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\userAppointmentUI.js":"29","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\myProfilePageUI.js":"30","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ResAppointmentUI.js":"31","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PHomepageUI.js":"32","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMyMPUI.js":"33","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\changePwUI.js":"34","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\BookAppointmentUI.js":"35","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ViewHealthArticleUI.js":"36","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchDoctor.js":"37","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\CancelAppointmentUI.js":"38","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMC.js":"39","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ScheduleAppointmentUI.js":"40","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewIndividualMPUI.js":"41","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewReceipt.js":"42","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MDHomepageUI.js":"43","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\DoctorRoute.js":"44","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\changePwUI.js":"45","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\EditMedicalRecord.js":"46","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js":"47","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js":"48","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\DocRescheduleUI.js":"49","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js":"50","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMPUI.js":"51","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js":"52","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js":"53","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMPUI.js":"54","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMC.js":"55","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js":"56","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\MedAdmRoute.js":"57","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\PatientViewArticle.js":"58","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticle.js":"59","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorProfile.js":"60","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\EditArticle\\EditArticle.js":"61","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ResAppointmentUI.js":"62","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MAHomepageUI.js":"63","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\changePwUI.js":"64","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js":"65","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CreateFollowUpUI.js":"66","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticleMedAdm.js":"67","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticle.js":"68","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticleMedAdm.js":"69","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SAHomepageUI.js":"70","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\changePwUI.js":"71","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\SystemAdminRoute.js":"72","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllAccountUI.js":"73","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\CreateAccountUI.js":"74","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js":"75","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js":"76","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.styles.js":"77","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchBar.js":"78","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\dropDownBar.js":"79","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorCard.js":"80","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MC.js":"81","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ArticleCard\\ArticleCard.js":"82","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PatientComment.js":"83","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js":"84","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\navbarUI.js":"85","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\searchBar.js":"86","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\dropDownBar.js":"87","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\StaffInput.js":"88","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\UserInput.js":"89","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\confirmDelete.js":"90"},{"size":583,"mtime":1609073849358,"results":"91","hashOfConfig":"92"},{"size":375,"mtime":1609073849361,"results":"93","hashOfConfig":"92"},{"size":2096,"mtime":1611327975795,"results":"94","hashOfConfig":"92"},{"size":339,"mtime":1611154119483,"results":"95","hashOfConfig":"92"},{"size":1426,"mtime":1611995977581,"results":"96","hashOfConfig":"92"},{"size":408,"mtime":1610293277748,"results":"97","hashOfConfig":"92"},{"size":3063,"mtime":1612261299054,"results":"98","hashOfConfig":"92"},{"size":852,"mtime":1609468629584,"results":"99","hashOfConfig":"92"},{"size":2569,"mtime":1612534671813,"results":"100","hashOfConfig":"92"},{"size":855,"mtime":1610210889735,"results":"101","hashOfConfig":"92"},{"size":854,"mtime":1609504207739,"results":"102","hashOfConfig":"92"},{"size":855,"mtime":1610210889738,"results":"103","hashOfConfig":"92"},{"size":9989,"mtime":1613555079865,"results":"104","hashOfConfig":"92"},{"size":4480,"mtime":1611994942859,"results":"105","hashOfConfig":"92"},{"size":4809,"mtime":1613555079870,"results":"106","hashOfConfig":"92"},{"size":3367,"mtime":1613555079868,"results":"107","hashOfConfig":"92"},{"size":784,"mtime":1612938154837,"results":"108","hashOfConfig":"92"},{"size":433,"mtime":1609547222515,"results":"109","hashOfConfig":"92"},{"size":1683,"mtime":1612534671836,"results":"110","hashOfConfig":"92"},{"size":3216,"mtime":1613555680382,"results":"111","hashOfConfig":"92"},{"size":5650,"mtime":1609504207720,"results":"112","hashOfConfig":"92"},{"size":1870,"mtime":1612534671818,"results":"113","hashOfConfig":"92"},{"size":773,"mtime":1610729184252,"results":"114","hashOfConfig":"92"},{"size":720,"mtime":1612938154835,"results":"115","hashOfConfig":"92"},{"size":615,"mtime":1613279283183,"results":"116","hashOfConfig":"92"},{"size":606,"mtime":1613555079886,"results":"117","hashOfConfig":"92"},{"size":1197,"mtime":1610436627100,"results":"118","hashOfConfig":"92"},{"size":1105,"mtime":1613566548318,"results":"119","hashOfConfig":"92"},{"size":5667,"mtime":1613573548631,"results":"120","hashOfConfig":"92"},{"size":7707,"mtime":1613571354346,"results":"121","hashOfConfig":"92"},{"size":7592,"mtime":1613572916578,"results":"122","hashOfConfig":"92"},{"size":6274,"mtime":1613571835452,"results":"123","hashOfConfig":"92"},{"size":2538,"mtime":1612534671788,"results":"124","hashOfConfig":"92"},{"size":2466,"mtime":1612534671792,"results":"125","hashOfConfig":"92"},{"size":5562,"mtime":1613571749933,"results":"126","hashOfConfig":"92"},{"size":2793,"mtime":1613571243236,"results":"127","hashOfConfig":"92"},{"size":6657,"mtime":1613565599883,"results":"128","hashOfConfig":"92"},{"size":4151,"mtime":1613557499673,"results":"129","hashOfConfig":"92"},{"size":3474,"mtime":1613573109047,"results":"130","hashOfConfig":"92"},{"size":9812,"mtime":1613572945339,"results":"131","hashOfConfig":"92"},{"size":6945,"mtime":1613576972082,"results":"132","hashOfConfig":"92"},{"size":5301,"mtime":1613573134880,"results":"133","hashOfConfig":"92"},{"size":5228,"mtime":1613573913892,"results":"134","hashOfConfig":"92"},{"size":1051,"mtime":1612534671835,"results":"135","hashOfConfig":"92"},{"size":2354,"mtime":1610266066783,"results":"136","hashOfConfig":"92"},{"size":7826,"mtime":1612938154815,"results":"137","hashOfConfig":"92"},{"size":3663,"mtime":1612518196129,"results":"138","hashOfConfig":"92"},{"size":5996,"mtime":1612518367350,"results":"139","hashOfConfig":"92"},{"size":6166,"mtime":1613573887945,"results":"140","hashOfConfig":"92"},{"size":6862,"mtime":1613575925605,"results":"141","hashOfConfig":"92"},{"size":12938,"mtime":1613573873153,"results":"142","hashOfConfig":"92"},{"size":7048,"mtime":1613573949186,"results":"143","hashOfConfig":"92"},{"size":3835,"mtime":1613573963247,"results":"144","hashOfConfig":"92"},{"size":13960,"mtime":1613147799638,"results":"145","hashOfConfig":"92"},{"size":5831,"mtime":1613573847759,"results":"146","hashOfConfig":"92"},{"size":4590,"mtime":1613567986813,"results":"147","hashOfConfig":"92"},{"size":1064,"mtime":1612534671837,"results":"148","hashOfConfig":"92"},{"size":4338,"mtime":1612534671829,"results":"149","hashOfConfig":"92"},{"size":4594,"mtime":1613279283184,"results":"150","hashOfConfig":"92"},{"size":4895,"mtime":1613555079867,"results":"151","hashOfConfig":"92"},{"size":9300,"mtime":1613279283180,"results":"152","hashOfConfig":"92"},{"size":7454,"mtime":1613571682759,"results":"153","hashOfConfig":"92"},{"size":4409,"mtime":1613574032077,"results":"154","hashOfConfig":"92"},{"size":2465,"mtime":1613555079863,"results":"155","hashOfConfig":"92"},{"size":11572,"mtime":1613555079862,"results":"156","hashOfConfig":"92"},{"size":8538,"mtime":1613571638716,"results":"157","hashOfConfig":"92"},{"size":4594,"mtime":1613555079887,"results":"158","hashOfConfig":"92"},{"size":8181,"mtime":1613555079882,"results":"159","hashOfConfig":"92"},{"size":8181,"mtime":1613555079884,"results":"160","hashOfConfig":"92"},{"size":4598,"mtime":1613574127704,"results":"161","hashOfConfig":"92"},{"size":2352,"mtime":1610266066795,"results":"162","hashOfConfig":"92"},{"size":1065,"mtime":1612534671840,"results":"163","hashOfConfig":"92"},{"size":5239,"mtime":1613555352370,"results":"164","hashOfConfig":"92"},{"size":9874,"mtime":1613555124448,"results":"165","hashOfConfig":"92"},{"size":13729,"mtime":1613574310659,"results":"166","hashOfConfig":"92"},{"size":3826,"mtime":1613555079875,"results":"167","hashOfConfig":"92"},{"size":3473,"mtime":1609504207721,"results":"168","hashOfConfig":"92"},{"size":682,"mtime":1612505280494,"results":"169","hashOfConfig":"92"},{"size":1399,"mtime":1610543862366,"results":"170","hashOfConfig":"92"},{"size":1452,"mtime":1610543910991,"results":"171","hashOfConfig":"92"},{"size":2677,"mtime":1611761389248,"results":"172","hashOfConfig":"92"},{"size":1600,"mtime":1610266066804,"results":"173","hashOfConfig":"92"},{"size":6901,"mtime":1613571814868,"results":"174","hashOfConfig":"92"},{"size":832,"mtime":1612938154805,"results":"175","hashOfConfig":"92"},{"size":828,"mtime":1609511739548,"results":"176","hashOfConfig":"92"},{"size":682,"mtime":1611154119482,"results":"177","hashOfConfig":"92"},{"size":949,"mtime":1613555079880,"results":"178","hashOfConfig":"92"},{"size":2041,"mtime":1613574152241,"results":"179","hashOfConfig":"92"},{"size":2025,"mtime":1613574182415,"results":"180","hashOfConfig":"92"},{"size":5394,"mtime":1613574433595,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"andvhl",{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"184"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"184"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"184"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"184"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"184"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"184"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"184"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"184"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"184"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"184"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"184"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"184"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"184"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"184"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"184"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"184"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"184"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"184"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"184"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"184"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"184"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"184"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"184"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"184"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"184"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"184"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"184"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"184"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"184"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"184"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"184"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"184"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"184"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"184"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"184"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"184"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"184"},"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\index.js",[],["401","402"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\reportWebVitals.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.js",["403","404","405","406","407","408","409","410"],"import './App.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { AuthProvider } from './util/Auth';\r\nimport PrivateRoute from \"./util/AuthRoute\";\r\n\r\n// User ------------------------------------------------------\r\nimport LoginUI from './User/LoginUI';\r\nimport ResetPasswordUI from './User/ResetPasswordUI';\r\n\r\n// System Admin ----------------------------------------------\r\nimport SysAdm from \"./SystemAdmin/SysAdm\";\r\n\r\n// Patient ---------------------------------------------------\r\nimport Patient from './Patient/Patient';\r\nimport RegisterUI  from './Patient/RegisterUI';\r\n\r\n// Medical Doctor --------------------------------------------\r\nimport MedDoc from './MedicalDoctor/MedDoc'\r\n\r\n// Medical Admin ---------------------------------------------\r\nimport MedAdm from './MedicalAdmin/MedAdm'\r\n\r\nimport NoMatch from './noMatch'\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n      <Router>\r\n      <AuthProvider>\r\n        <Switch>\r\n          // User Login Page\r\n          <Route exact path=\"/\" component={LoginUI}/>\r\n\r\n          // Patient Create New Account Page\r\n          <Route path=\"/register\" component={RegisterUI}/>\r\n\r\n          // User Reset Password Page\r\n          <Route path=\"/resetPassword\" component={ResetPasswordUI}/>\r\n\r\n          // System admin Main Page ----------------------------------------\r\n          <PrivateRoute path=\"/SysAdm\" component={SysAdm} />\r\n\r\n          // Patient Main Page ---------------------------------------------\r\n          <PrivateRoute path=\"/Patient\" component={Patient}/>\r\n\r\n          // Medical Doctor Main Page --------------------------------------\r\n          <PrivateRoute path=\"/MedDoc\" component={MedDoc}/>\r\n\r\n          // Medical Admin Main Page ---------------------------------------\r\n          <PrivateRoute path=\"/MedAdm\" component={MedAdm}/>\r\n          \r\n          // Display error if path does not match\r\n          <Route path=\"*\">\r\n            <NoMatch />\r\n          </Route>\r\n          \r\n        </Switch>\r\n        </AuthProvider>\r\n      </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\noMatch.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\Auth.js",["411"],"import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function deleteAccount(currentUser){\r\n    return auth.delete(currentUser)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\AuthRoute.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\LoginUI.js",["412","413","414","415","416","417"],"import React, {useState} from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { auth, firestore } from '../firebase';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nfunction LoginUI() {\r\n    //useStates\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const {login} = useAuth();\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState([]);\r\n    const {currentUser} = useAuth();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await login(Email, Password);\r\n            history.push(\"/Patient\");\r\n        }catch(error) {\r\n            setError(error.message);\r\n        }\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div style={{backgroundImage: `url(\"https://i.ibb.co/yRDqQHh/pexels-karolina-grabowska-4021769.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'}}>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h1 className= \"text-center mb-4\" style={{\r\n                     fontSize: '2em'\r\n                 }}>MyAppointment</h1>\r\n                 <h2 className= \"text-center mb-4\"> Login</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control \r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                        value={Password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Button className=\"w-100\" type=\"submit\">Login</Button>\r\n                 </Form>\r\n                 <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/resetPassword\">Forgot Password?</Link>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Don't have an account? <Link to=\"/register\"><u>Join Now!</u></Link>\r\n            </div>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SysAdm.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ResetPasswordUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MedDoc.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\Patient.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MedAdm.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\RegisterUI.js",["418","419","420","421","422","423","424","425","426","427","428"],"import React, { useState, useRef } from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory} from 'react-router-dom';\r\nimport { auth, firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport PasswordStrengthIndicator from '../components/PasswordStrengthIndicator';\r\nimport {useAuth} from '../util/Auth'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\n\r\nfunction RegisterUI() {\r\n\r\n   //useStates\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Address, setAddress] = useState(\"\"); \r\n   const [DOB, setDOB] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Telephone, setTelephone] = useState(\"\"); \r\n   const [Password, setPassword] = useState(\"\"); \r\n   const [ConfirmPassword, setConfirmPassword] = useState(\"\"); \r\n   const [error, setError] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n   const history = useHistory();\r\n\r\n   const FNameRef = useRef();\r\n   const LNameRef = useRef();\r\n   const NRICRef = useRef();\r\n   const AddressRef = useRef();\r\n   const DOBRef = useRef();\r\n   const EmailRef = useRef();\r\n   const TelephoneRef = useRef();\r\n   const PasswordRef = useRef();\r\n   const ConfirmPasswordRef = useRef();\r\n\r\n   const {signup} = useAuth()\r\n   const {currentUser} = useAuth()\r\n\r\n   // Check Validity\r\n   const isNumber = /\\d/;\r\n   const isSpecChar = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\r\n   const isLower = /[a-z]/;\r\n   const isUpper = /[A-Z]/;\r\n\r\n   const [passwordFocused, setPasswordFocused] = useState(false);\r\n   const [passwordValidity, setPasswordValidity] = useState ({\r\n      minChar: null,\r\n      lower: null,\r\n      upper: null,\r\n      number: null,\r\n      specialChar: null\r\n   });\r\n\r\n   const submitCreateAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Your account has been created successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   const onChangePassword = password =>\r\n   {\r\n      setPassword(password);\r\n      setPasswordValidity({\r\n         minChar: password.length >=8 ? true : false,\r\n         lower: isLower.test(password) ? true : false,\r\n         upper: isUpper.test(password) ? true : false,\r\n         number: isNumber.test(password) ? true : false,\r\n         specialChar: isSpecChar.test(password) ? true : false\r\n      })\r\n   }\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      \r\n      if(Password !== ConfirmPassword)\r\n      {\r\n         return setError(\"Passwords do not match\")\r\n      }\r\n\r\n      if (passwordValidity.minChar == false || passwordValidity.lower == false || passwordValidity.upper == false || passwordValidity.number == false || passwordValidity.specialChar == false)\r\n      {\r\n         return setError(\"Password do not meet the requirement\");\r\n      }\r\n\r\n      try{\r\n         setError(\"\");\r\n         setLoading(true);\r\n         await signup(Email, Password) \r\n\r\n         firestore.collection('Users').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            NRIC: NRIC,\r\n            Address: Address,\r\n            DOB: DOB,\r\n            Email: Email.toLowerCase(),\r\n            Telephone: Telephone,\r\n            Role: \"Patient\",\r\n         })\r\n         .then(() => {\r\n            submitCreateAlert()\r\n         })\r\n\r\n         // send email to user\r\n         let details = {\r\n            email: Email.toLowerCase(),\r\n            user: FirstName + \" \" + LastName\r\n         };\r\n         let response = await fetch(\"http://localhost:5000/createAcc\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n      } catch(error){\r\n         return setError(error.message);\r\n      }\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setNRIC(\"\");\r\n      setAddress(\"\");\r\n      setDOB(\"\");\r\n      setEmail(\"\");\r\n      setTelephone(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setError(\"\");\r\n      setLoading(false);\r\n      setPasswordFocused(false);\r\n      };\r\n\r\n   return (\r\n      <div style={{backgroundImage: `url(\"https://i.ibb.co/yRDqQHh/pexels-karolina-grabowska-4021769.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'}}>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"500px\"}}>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">Create your Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={FNameRef}\r\n                        value={FirstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={LNameRef}\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"NRIC\">\r\n                        <Form.Label>NRIC</Form.Label>\r\n                        <Form.Control\r\n                        ref={NRICRef}\r\n                        value={NRIC}\r\n                        onChange={(e) => setNRIC(e.target.value)} \r\n                        pattern = \"[s S| t T | f F | g G][0-9]{7}[a-z A-Z]\"\r\n                        title = \"Please enter according to NRIC format\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={AddressRef}\r\n                        value={Address}\r\n                        onChange={(e) => setAddress(e.target.value)} \r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"DOB\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control \r\n                        ref={DOBRef}\r\n                        value={DOB}\r\n                        max={moment().format(\"YYYY-MM-DD\")}\r\n                        onChange={(e) => setDOB(e.target.value)} \r\n                        type=\"date\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={EmailRef}\r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control \r\n                        ref={TelephoneRef}\r\n                        value={Telephone}\r\n                        onChange={(e) => setTelephone(e.target.value)}\r\n                        pattern = \"[0-9]{8}\"\r\n                        title = \"Please enter 8 digits\"\r\n                        type=\"invalid\" required/>\r\n                     </Form.Group>\r\n                     <hr  style={{\r\n                                borderColor : '#000000',\r\n                                marginTop : '50px'\r\n                            }}/>\r\n                     <Form.Group id = \"Password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                        ref={PasswordRef}\r\n                        value={Password}\r\n                        onFocus = {() => setPasswordFocused(true)}\r\n                        onChange={(e) => onChangePassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"ConfirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                        ref={ConfirmPasswordRef}\r\n                        value={ConfirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)} \r\n                        type=\"password\" required/>\r\n                     </Form.Group>\r\n\r\n                     { passwordFocused && <PasswordStrengthIndicator validity={passwordValidity}/>}\r\n\r\n                     <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                 </Form>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/\"><u>Login!</u></Link>\r\n            </div>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default RegisterUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\PRoute.js",["429","430","431"],"import React,{useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport PrivateRoute from \"../util/AuthRoute\";\r\nimport PatientRoute from \"../util/PatientRoute\";\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\nimport { AuthProvider } from '../util/Auth';\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport PHomePageUI from \"../Patient/PHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../Patient/changePwUI\";\r\nimport ViewMyMPUI from \"../Patient/ViewMyMPUI\"\r\nimport UserAppointmentUI from '../Patient/userAppointmentUI';\r\nimport BookAppointmentUI from '../Patient/BookAppointmentUI';\r\nimport ResAppointmentUI from '../Patient/ResAppointmentUI';\r\nimport CancelAppointmentUI from '../Patient/CancelAppointmentUI';\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport PatientViewArticle from \"../components/ViewArticle/PatientViewArticle\";\r\nimport DoctorProfile from \"../Patient/doctorProfile\";\r\nimport SearchDoctor from \"../Patient/searchDoctor\";\r\nimport ScheduleAppointmentUI from \"../Patient/ScheduleAppointmentUI\"\r\nimport ViewIndividualMPUI from \"../Patient/ViewIndividualMPUI\";\r\nimport ViewMC from \"../Patient/ViewMC\";\r\nimport ViewReceipt from \"../Patient/ViewReceipt\";\r\n\r\nconst PRoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            <PatientRoute exact path= {`${path}`} component={PHomePageUI} role={user.Role}/>\r\n\r\n            {/* // My Profile */}\r\n            <PatientRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            {/* // Change Password */}\r\n            <PatientRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // Medical Profile */}\r\n            <PatientRoute exact path={`${path}/MedicalProfile`} component={ViewMyMPUI} role={user.Role}/>\r\n\r\n            {/* // Individual Medical Profile */}\r\n            <PatientRoute exact path={`${path}/ViewMedicalProfile`} component={ViewIndividualMPUI} role={user.Role}/>\r\n\r\n            {/* // View MC */}\r\n            <PatientRoute exact path={`${path}/ViewMC`} component={ViewMC} role={user.Role}/>\r\n\r\n            {/* // View Receipt */}\r\n            <PatientRoute exact path={`${path}/ViewReceipt`} component={ViewReceipt} role={user.Role}/>\r\n\r\n            {/* // Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment`} component={UserAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Book Apointment */}\r\n            <PatientRoute exact path={`${path}/bookAppointment/`} component={BookAppointmentUI} role={user.Role}/>\r\n            <PatientRoute exact path={`${path}/scheduleAppointment/`} component={ScheduleAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Reschedule Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment/Reschedule`} component={ResAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Cancel Appointment */}\r\n            <PatientRoute exact path={`${path}/Appointment/Cancel`} component={CancelAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // View Health Article */}\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            {/* // View Individual Article */}\r\n            <Route path={`${path}/article/:id`} component={PatientViewArticle}/>\r\n\r\n            {/* // Doctor Profile */}\r\n            <PatientRoute exact path={`${path}/searchDoctor`} component={SearchDoctor} role={user.Role}/>\r\n\r\n            {/* // Individual Doctor Profile */}\r\n            <PatientRoute exact path={`${path}/doctorProfile/:id`} component={DoctorProfile} role={user.Role}/>\r\n            \r\n            {/* // Display error if path does not match */}\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n        </Switch>\r\n    )}\r\n\r\nexport default PRoute;","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MDRoute.js",["432"],"import React,{useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport DoctorRoute from \"../util/DoctorRoute\";\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport MDHomepageUI from \"../MedicalDoctor/MDHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../MedicalDoctor/changePwUI\";\r\nimport ViewArticle from \"../components/ViewArticle/ViewArticle\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport EditArticle from \"../components/EditArticle/EditArticle\";\r\nimport NewArticle from \"../components/NewArticle/NewArticle\";\r\nimport CreateMPUI from \"../MedicalDoctor/CreateMPUI\";\r\nimport ViewPatientProfileUI from \"../MedicalDoctor/ViewPatientProfileUI\";\r\nimport CreateMedicalRecord from \"../MedicalDoctor/CreateMedicalRecord\";\r\nimport EditMedicalRecord from \"../MedicalDoctor/EditMedicalRecord\";\r\nimport TransferMedicalRecord from \"../MedicalDoctor/TransferMedicalRecord\";\r\nimport ViewMPUI from \"../MedicalDoctor/ViewMPUI\";\r\nimport ViewAllocatedPatientUI from \"../MedicalDoctor/ViewAllocatedPatientUI\"\r\nimport DocRescheduleUI from \"../MedicalDoctor/DocRescheduleUI\";\r\nimport CreateMC from \"../MedicalDoctor/CreateMC\"\r\nimport ViewMedicalCertificate from \"../MedicalDoctor/ViewMedicalCertificate\"\r\n\r\nconst MDRoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", currentUser.email)\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            {/* // Medical Doctor Homepage */}\r\n            <DoctorRoute exact path= {`${path}`} component={MDHomepageUI} role={user.Role}/>\r\n\r\n            {/* // View My Profile */}\r\n            <DoctorRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            {/* // Change Password */}\r\n            <DoctorRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // View Patient Profile */}\r\n            <DoctorRoute exact path={`${path}/PatientProfile`} component={ViewPatientProfileUI} role={user.Role}/>\r\n\r\n            {/* // craete medical record */}\r\n            <DoctorRoute exact path={`${path}/CreateMedicalRecord`} component={CreateMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // edit medical record */}\r\n            <DoctorRoute exact path={`${path}/EditMedicalRecord`} component={EditMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // transfer medical record */}\r\n            <DoctorRoute exact path={`${path}/TransferMedicalRecord`} component={TransferMedicalRecord} role={user.Role}/>\r\n\r\n            {/* // Create Patient Medical Document */}\r\n            <DoctorRoute exact path={`${path}/CreateMP`} component={CreateMPUI} role={user.Role}/>\r\n\r\n            {/* // Create Patient Medical Certificate */}\r\n            <DoctorRoute exact path={`${path}/CreateMC`} component={CreateMC} role={user.Role}/>\r\n\r\n            {/* // View Patient Medical Record */}\r\n            <DoctorRoute exact path={`${path}/ViewMP`} component={ViewMPUI} role={user.Role}/>\r\n\r\n            {/* // View Patient Medical Certicficate */}\r\n            <DoctorRoute exact path={`${path}/ViewMC`} component={ViewMedicalCertificate} role={user.Role}/>\r\n\r\n            {/* // View Own Schedule */}\r\n            <DoctorRoute exact path={`${path}/Schedule`} component={ViewAllocatedPatientUI} role={user.Role}/>\r\n\r\n            {/* // View Own Schedule */}\r\n            <DoctorRoute exact path={`${path}/Reschedule`} component={DocRescheduleUI} role={user.Role}/>\r\n\r\n            {/* // View Health Article */}\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI} />\r\n\r\n            {/* // View Individual Article */}\r\n            <Route path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            {/* // Create New Health Post */}\r\n            <DoctorRoute path={`${path}/ViewHealthArticle/new-article`} component={NewArticle}/>\r\n\r\n            {/* // Edit Article */}\r\n            <DoctorRoute path={`${path}/edit-article`} component={EditArticle}/>\r\n            \r\n\r\n            {/* // Display error if path does not match */}\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n            \r\n        </Switch>\r\n    )}\r\n\r\nexport default MDRoute;","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\MARoute.js",["433","434","435","436","437","438","439","440","441","442","443"],"import React, {useState} from 'react'\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport MedAdmRoute from \"../util/MedAdmRoute\"\r\nimport {firestore} from \"../firebase\";\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport MAHomepageUI from \"../MedicalAdmin/MAHomepageUI\";\r\nimport ResAppointmentUI from \"../MedicalAdmin/ResAppointmentUI\";\r\nimport CancelAppointmentUI from \"../MedicalAdmin/CancelAppointmentUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ChangePasswordUI from \"../MedicalAdmin/changePwUI\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport ViewArticle from \"../components/ViewArticle/ViewArticleMedAdm\";\r\nimport EditArticle from \"../components/EditArticle/EditArticle\";\r\nimport NewArticle from \"../components/NewArticle/NewArticleMedAdm\";\r\nimport ViewDoctorScheduleUI from \"../MedicalAdmin/ViewDoctorScheduleUI\";\r\nimport CreateFollowUpUI from \"../MedicalAdmin/CreateFollowUpUI\"\r\n\r\nconst MARoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", currentUser.email)\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            // Medical Admin Homepage\r\n            <MedAdmRoute exact path= {`${path}`} component={MAHomepageUI} role={user.Role}/>\r\n\r\n            // View My Profile\r\n            <MedAdmRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            // Change Password\r\n            <MedAdmRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            {/* // Reschedule Appointment */}\r\n            <MedAdmRoute exact path={`${path}/Reschedule`} component={ResAppointmentUI} role={user.Role}/>\r\n\r\n            {/* // Cancel Appointment */}\r\n            <MedAdmRoute exact path={`${path}/Cancel`} component={CancelAppointmentUI} role={user.Role}/>\r\n\r\n            // View Doctor schedule\r\n            <MedAdmRoute exact path={`${path}/Schedule`} component={ViewDoctorScheduleUI} role={user.Role}/>\r\n\r\n            // Create Follow Up Appointment\r\n            <MedAdmRoute exact path={`${path}/Create`} component={CreateFollowUpUI} role={user.Role}/>\r\n\r\n            // View Health Article\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            // View Individual Article\r\n            <Route  path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            // Create New Health Post\r\n            <MedAdmRoute path={`${path}/ViewHealthArticle/new-article`} component={NewArticle} role={user.Role}/>\r\n\r\n            // Edit Article\r\n            <MedAdmRoute path={`${path}/edit-article`} component={EditArticle} role={user.Role}/>\r\n\r\n            // Display error if path does not match\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n\r\n        </Switch>\r\n    )}\r\n\r\nexport default MARoute;","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\firebase.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\App.styles.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\IdleTimerContainer.js",["444"],"import Reeact, {useRef, useState} from 'react'\r\nimport IdleTimer from 'react-idle-timer'\r\nimport { auth } from '../firebase';\r\nimport Modal from 'react-modal'\r\nimport {Container} from 'react-bootstrap'\r\n\r\nModal.setAppElement('#root')\r\n\r\nfunction IdleTimerContainer(){\r\n    const [modalIsOpen, setModalIsOpen] = useState(false) \r\n    const idleTimerRef = useRef(null)\r\n    const sessionTimeoutRef = useRef(null)\r\n\r\n    const onIdle = () => {\r\n        setModalIsOpen(true)\r\n        //timeout within 5 secs\r\n        sessionTimeoutRef.current = setTimeout(logOut, 5 * 1000)\r\n    }\r\n\r\n    const stayActive = () => {\r\n        setModalIsOpen(false)\r\n        clearTimeout(sessionTimeoutRef.current)\r\n    }\r\n\r\n    const logOut = () => {\r\n        setModalIsOpen(false)\r\n        auth.signOut()\r\n        clearTimeout(sessionTimeoutRef.current)\r\n    }\r\n\r\n\r\nreturn (\r\n    <div>\r\n        {/* {\r\n        isLoggedIn ? <h2>Hello Jas</h2>: <h2>Hello Guest</h2>\r\n        } */}\r\n        <Container className=\"d-flex align-items-center justify-content-center\">\r\n        <Modal isOpen = {modalIsOpen}>\r\n            <h1 style = {{fontSize: \"60px\"}}>You've been idle for awhile!</h1>\r\n            <h1 style = {{fontSize: \"30px\"}}>You will be logged out soon</h1>\r\n            <div>\r\n                <button onClick ={logOut}>Log me out</button>\r\n                <button onClick = {stayActive}>Keep me logged in</button>  \r\n            </div>\r\n        </Modal>\r\n        </Container>\r\n        <IdleTimer ref = {idleTimerRef}\r\n         timeout = {1000 * 60 * 15} //Session will time out within 15 minutes\r\n          onIdle = {onIdle}>\r\n        </IdleTimer>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default IdleTimerContainer","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Routes\\SARoute.js",["445","446","447","448","449","450","451","452","453","454","455","456"],"import React, {useState} from 'react';\r\nimport {useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport {firestore} from \"../firebase\";\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nimport NoMatch from '../noMatch'\r\n\r\nimport SAHomePageUI from \"../SystemAdmin/SAHomepageUI\";\r\nimport MyProfilePageUI from \"../User/myProfilePageUI\";\r\nimport ViewAllAccountUI from \"../SystemAdmin/ViewAllAccountUI\";\r\nimport ViewHealthArticleUI from '../User/ViewHealthArticleUI';\r\nimport ChangePasswordUI from \"../SystemAdmin/changePwUI\";\r\nimport CreateAccountUI from \"../SystemAdmin/CreateAccountUI\";\r\nimport ViewIndividualAccountUI from \"../SystemAdmin/ViewIndividualAccountUI\";\r\nimport ViewAllStaffAccount from \"../SystemAdmin/ViewAllStaffAccount\";\r\nimport ViewArticle from \"../components/ViewArticle/PatientViewArticle\";\r\nimport ConfirmDelete from \"../SystemAdmin/confirmDelete\";\r\n\r\nimport SystemAdminRoute from \"../util/SystemAdminRoute\";\r\n\r\n\r\nconst SARoute = () =>\r\n{\r\n    const {path} = useRouteMatch();\r\n\r\n    const { currentUser } = useAuth();\r\n    const [Users, setUsers] = useState([]); \r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Users\")\r\n           .where(\"Email\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const user = {...Users[0]};\r\n\r\n    return(\r\n        <Switch>\r\n            // Sys Adm Homepage\r\n            <SystemAdminRoute exact path= {`${path}`} component={SAHomePageUI} role={user.Role}/>\r\n\r\n            // My Profils\r\n            <SystemAdminRoute exact path={`${path}/myProfile`} component={MyProfilePageUI} role={user.Role}/>\r\n\r\n            // Change Password\r\n            <SystemAdminRoute exact path={`${path}/myProfile/changePW`} component={ChangePasswordUI} role={user.Role}/>\r\n\r\n            // View All Account\r\n            <SystemAdminRoute exact path= {`${path}/viewAllAccount`} component={ViewAllAccountUI} role={user.Role} />\r\n\r\n            // Create New Account\r\n            <SystemAdminRoute exact path={`${path}/viewAllAccount/createAccount`} component={CreateAccountUI} role={user.Role}/>\r\n\r\n            // View Individual Account\r\n            <SystemAdminRoute exact path={`${path}/viewIndvAcc`} component={ViewIndividualAccountUI} role={user.Role}/>\r\n\r\n            // View Individual Account\r\n            <SystemAdminRoute exact path={`${path}/confirmDel`} component={ConfirmDelete} role={user.Role}/>\r\n\r\n            // View Health Article\r\n            <Route exact path={`${path}/ViewHealthArticle`} component={ViewHealthArticleUI}/>\r\n\r\n            // View Individual Article\r\n            <Route path={`${path}/article/:id`} component={ViewArticle}/>\r\n\r\n            //View All Staff\r\n            <SystemAdminRoute path={`${path}/viewAllStaffAccount`} component={ViewAllStaffAccount} role={user.Role}/>\r\n\r\n\r\n            // Display error if path does not match\r\n            <Route path=\"*\">\r\n                <NoMatch />\r\n            </Route>\r\n\r\n        </Switch>\r\n    )}\r\n\r\nexport default SARoute;\r\n\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Navbar\\NavigationbarSA.js",["457"],"import React, {useState} from 'react';\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\nimport styled from 'styled-components';\r\nimport { firestore, auth } from '../../firebase';\r\nimport {useAuth} from '../../util/Auth';\r\n\r\n\r\nconst Styles = styled.div`\r\n  .navbar { background-color: #2B3856; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    color: #95B9C7;\r\n    &:hover { color: white; }\r\n  }\r\n  .navbar-brand, .navbar-brand:hover {\r\n    font-size: 1.4em;\r\n    color: #98AFC7;\r\n    cursor: default;\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n  }\r\n`;\r\n\r\nconst NaviBar = () => {\r\n\r\n  const {currentUser} = useAuth()\r\n  const [users, setUsers] = useState([])\r\n  React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Users\")\r\n         .where(\"Email\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n               setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         }); \r\n      };\r\n      fetchData();\r\n   }, [])\r\n   const user = {...users[0]}\r\n\r\n   function deleteUser(){\r\n    currentUser.delete().then(function() {\r\n        alert(\"Exit successfully\")\r\n      }).catch(function(error) {\r\n        alert(error)\r\n      });  \r\n}\r\n\r\n    return(\r\n        <Styles>\r\n        <Navbar>\r\n            <Navbar.Brand>My Appointment</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n              <Nav className=\"ml-auto\">\r\n              {user.Role ? ( <Nav.Item><Nav.Link onClick={() => auth.signOut()}>Logout</Nav.Link></Nav.Item>): \r\n              (<Nav.Item><Nav.Link onClick={() => deleteUser() }>Your Account has been deleted / disabled. Click here to exit</Nav.Link></Nav.Item>)}\r\n              </Nav>\r\n        </Navbar>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nexport default NaviBar;","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\PSideBarData.js",["458"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePw'}\r\n        ]},\r\n\r\n    {name: 'Medical Profile', to: '/MedicalProfile', icon: '/icons/medicalProfile.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Appointment', to: '/Appointment', icon: '/icons/appointment.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'Doctor Profile', to: '/searchDoctor', icon: '/icons/doctor.svg', \r\n       subMenuItems: []}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MDSideBarData.js",["459"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePW'}\r\n        ]},\r\n\r\n    {name: 'Patient Profile', to: '/PatientProfile', icon: '/icons/patient.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Schedule', to: '/Schedule', icon: '/icons/appointment.svg', \r\n        subMenuItems: []},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: [\r\n            {name: 'Create New Post', to: '/new-article'}\r\n       ]}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\SASideBarData.js",["460"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n   {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n       \r\n   {name: 'My Profiles', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n      subMenuItems: [\r\n         {name: 'Change Password', to: '/changePW'}\r\n      ]},\r\n\r\n   {name: 'Manage Account', to: '/viewAllAccount', icon: '/icons/manageAccount.svg', \r\n      subMenuItems: [\r\n         {name: 'Create New Account', to: '/createAccount'}\r\n      ]},\r\n\r\n   {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n      subMenuItems: []}\r\n];\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\MASideBarData.js",["461"],"import React from 'react'\r\n\r\nexport const menuItems = [\r\n    {name: 'Home', to: '/', icon: '/icons/homepage.svg', \r\n       subMenuItems: []},\r\n\r\n    {name: 'My Profile', to: '/myProfile', icon: '/icons/myProfile.svg', \r\n        subMenuItems: [\r\n            {name: 'Change Password', to: '/changePW'}\r\n        ]},\r\n\r\n    {name: 'Schedule', to: '/Schedule', icon: '/icons/appointment.svg', \r\n        subMenuItems:[]},\r\n\r\n    {name: 'Educational', to: '/ViewHealthArticle', icon: '/icons/healthArticle.svg', \r\n       subMenuItems: [\r\n            {name: 'Create New Post', to: '/new-article'}\r\n       ]}\r\n ];\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\PasswordStrengthIndicator.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\PatientRoute.js",["462","463"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\userAppointmentUI.js",["464","465","466","467","468","469","470","471","472"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\myProfilePageUI.js",["473","474"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ResAppointmentUI.js",["475"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PHomepageUI.js",["476","477","478","479","480","481"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMyMPUI.js",["482"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Card,  Container } from \"react-bootstrap\";\r\nimport { useAuth } from '../util/Auth';\r\nimport { firestore } from '../firebase';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewMyMPUI() {\r\n   const {currentUser} = useAuth();\r\n   const [medDocs, setMedDocs] = useState([]);\r\n\r\n   React.useEffect(()=>{\r\n      const fetchData = async () =>{\r\n         firestore.collection(\"Medical Documents\")\r\n         .where(\"PatientEmail\", \"==\", String(currentUser.email))\r\n         .get()\r\n         .then(function(data){\r\n              console.log(data)\r\n              setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n      };\r\n      fetchData();\r\n   }, [])\r\n\r\n\r\n    return (\r\n       <div>\r\n         <IdleTimerContainer></IdleTimerContainer>\r\n         <Container>\r\n            <Card>\r\n               <Card.Title className=\"text-center\" style={{\r\n                  fontSize : \"2rem\",\r\n                  marginTop: \"2%\"\r\n               }}>View Your Medical Documents</Card.Title>\r\n               <Card.Title style={{\r\n                  marginTop: \"4%\",\r\n                  marginLeft: '2%',\r\n                  fontSize: '1.5rem',\r\n               }}>List of Documents</Card.Title>\r\n               <hr style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft: \"1.5%\",\r\n                }}/>\r\n                {medDocs.map(doc =>\r\n                <Card style={{\r\n                   maxWidth: \"40rem\",\r\n                   marginLeft: \"1.5%\",\r\n                   marginTop: \"1%\"\r\n                }}>\r\n                   <Card.Header as=\"h5\">Date of Visit : {doc.DateOfVisit}</Card.Header>\r\n                   <Card.Body>\r\n                     {doc.MedicalCertificate === \"\" ?\r\n                   <Card.Title>MC issued : No</Card.Title>: <Card.Title>MC issued : Yes</Card.Title>}\r\n                   <Link to={{\r\n                        pathname: '/Patient/ViewMedicalProfile', \r\n                        state:{document: doc}\r\n            }}><Button style={{\r\n                      marginTop: \"3%\",\r\n                   }}>View Medical Document</Button></Link>\r\n                   </Card.Body>\r\n                </Card>\r\n                )}\r\n            </Card>\r\n         </Container>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ViewMyMPUI","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\BookAppointmentUI.js",["483","484"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\User\\ViewHealthArticleUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchDoctor.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\CancelAppointmentUI.js",["485","486","487","488"],"import React,{useState} from 'react'\r\nimport moment from 'moment';\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport \"./ScheduleAppointment.css\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nfunction CancelAppointmentUI() {\r\n   const {state} = useLocation();              // access appointment passed from link router\r\n   const {Appointment} = state;                // save appointment data from state\r\n   const [error, setError] = useState(\"\");     // store error message\r\n   const { currentUser } = useAuth();\r\n   const history = useHistory();\r\n\r\n   const cancelAppointmentAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Your appointment has been cancelled successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      setError(\"\");\r\n\r\n      try{\r\n         await firestore.collection(\"Appointment\").doc(Appointment.id).delete()\r\n         .then(() => {\r\n            cancelAppointmentAlert()\r\n         })\r\n\r\n         // Send email to user\r\n         let details = {\r\n            date: Appointment.Date,\r\n            doctor: Appointment.Doctor,\r\n            timeslot: Appointment.Timeslot,\r\n            user: Appointment.Patient,\r\n            email: Appointment.PatientEmail\r\n         };\r\n         let response = await fetch(\"http://localhost:5000/cancel\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n\r\n         history.push(\"/Patient/Appointment\");\r\n      }\r\n      catch(error){\r\n         return setError(error.message);\r\n      }\r\n }\r\n\r\n   return (\r\n      <div>\r\n         <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                <Card.Title className= \"text-center\">Cancel Appointment</Card.Title>\r\n                <label class=\"note\">The following appointment will be cancelled:</label>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit} className=\"my-4\">\r\n                 <Form.Group id = \"date\">\r\n                        <Form.Label className=\"my-2\">Appointment Date</Form.Label>\r\n                        <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Date}\r\n                        type=\"date\" required/>\r\n                  </Form.Group>\r\n                  <Form.Group id = \"text\">\r\n                     <Form.Label>Appointment Time Slot</Form.Label>\r\n                     <Form.Control \r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Timeslot}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Form.Group id = \"text\">\r\n                     <Form.Label>Doctor Name</Form.Label>\r\n                     <Form.Control className = \"mb-4\"\r\n                        disabled = {true}\r\n                        defaultValue={Appointment.Doctor}\r\n                        type=\"text\" required/>\r\n                </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Cancel Appointment</Button>\r\n                <Link to={'/Patient/Appointment'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CancelAppointmentUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewMC.js",["489","490"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ScheduleAppointmentUI.js",["491","492","493"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewIndividualMPUI.js",["494","495","496","497","498","499"],"import React,{useState} from 'react';\r\nimport Select from \"react-select\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\n\r\nfunction ViewIndividualMPUI() {\r\n    const {state} = useLocation();\r\n    const {document} = state;\r\n    const [doc, setDoc] = useState([]);\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\").limit(1)\r\n            .where(\"Email\",\"==\",document.DocEmail)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setDoc(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            }); \r\n        };\r\n        fetchData();\r\n    },[])\r\n    const rec = {...doc[0]}\r\n    return (\r\n        <div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n            <h2 className= \"text-center mb-4 mt-3\">Medical Document</h2>\r\n             <Card.Body>\r\n                <Form>\r\n                    <Form.Group id = \"Name\">\r\n                    <Form.Label>Patient Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.Patient} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Date of Visit</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.DateOfVisit} \r\n                        disabled = {true} \r\n                        type=\"date\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Doctor Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {rec.Name} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"reason\">\r\n                    <Form.Label>Reason for Visit</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.Reason}\r\n                        disabled = {true}\r\n                        rows = {3}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Prescriptions</Form.Label>\r\n                        <Select \r\n                        value = {document.prescriptions}\r\n                        isDisabled = {true}\r\n                        isMulti/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Prescription(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {document.prescriptions.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Tests</Form.Label>\r\n                        <Select \r\n                        value = {document.LabTests}\r\n                        isDisabled = {true}\r\n                        isMulti/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Medical Test(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {document.LabTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"LabResult\">\r\n                    <Form.Label>Lab Results</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.LabResults}\r\n                        disabled = {true}\r\n                        rows = {3}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Link to={{\r\n                        pathname: '/Patient/ViewMC', \r\n                        state:{document: document}\r\n            }}><Button className=\"w-100 my-2\">View MC</Button></Link>\r\n                    <Link to={{\r\n                        pathname: '/Patient/ViewReceipt', \r\n                        state:{document: document}\r\n            }}><Button className=\"w-100 my-2\">View Receipt</Button></Link>\r\n                </Form>\r\n                \r\n             </Card.Body>\r\n             </Card>\r\n             </div>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewIndividualMPUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\ViewReceipt.js",["500","501"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MDHomepageUI.js",["502","503","504","505","506"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\DoctorRoute.js",["507"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nfunction DoctorRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to patient homepage */}\r\n        {role === \"Patient\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/Patient\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n      {role === \"System Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/sysadm\"/>)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"Medical Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/MedAdm\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorRoute\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\EditMedicalRecord.js",["508","509"],"import React,{useState} from 'react';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport { useLocation, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport {firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction EditMedicalRecord() {\r\n    const {state} = useLocation()\r\n    const {md} = state\r\n    const history = useHistory();\r\n    const {path} = useRouteMatch();\r\n\r\n    //useStates\r\n    const [allergies, setAllergies] = useState(\"\");\r\n    const [demographics, setDemographics] = useState(\"\");\r\n    const [diagnoses, setDiagnoses] = useState(\"\");\r\n    const [labResults, setLabResults] = useState(\"\");\r\n    const [medicalHistory, setMedicalHistory] = useState(\"\");\r\n    const [vitals, setVitals] = useState(\"\");\r\n    const [error, setError] = useState(\"\"); \r\n    const [medRec, setMedRec] = useState([]);\r\n    const [fieldsDisabled, setFieldsDisabled] = useState(true);\r\n    const[editDisabled, setEditDisabled] = useState(false);\r\n\r\n    function onEdit(){\r\n        setEditDisabled(true);\r\n        setFieldsDisabled(false);\r\n        setAllergies(md.Allergies);\r\n        setDemographics(md.Demographics);\r\n        setDiagnoses(md.Diagnoses);\r\n        setLabResults(md.LabResults);\r\n        setMedicalHistory(md.MedicalHistory);\r\n        setVitals(md.Vitals);\r\n    }\r\n\r\n    const medicalRecordUpdatedAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Patient medical record has been updated successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            setError(\"\");\r\n            setFieldsDisabled(true);\r\n            await firestore.collection(\"Medical Records\").doc(md.id).update({\r\n                Allergies : allergies,\r\n                Demographics : demographics,\r\n                Diagnoses : diagnoses,\r\n                LabResults : labResults,\r\n                MedicalHistory : medicalHistory,\r\n                Vitals : vitals,\r\n            })\r\n            .then(() => {\r\n                medicalRecordUpdatedAlert()\r\n                history.push(\"/MedDoc/PatientProfile\");\r\n             })\r\n        }\r\n        catch(error){\r\n            return setError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n                    <Card>\r\n                        <h2 className= \"text-center mb-4 mt-3\">View/Edit Medical Record</h2>\r\n                        <Card.Body>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id = \"Name\">\r\n                                <Form.Label>Patient Name</Form.Label>\r\n                                <Form.Control \r\n                                    defaultValue = {md.Patient} \r\n                                    disabled = {true} \r\n                                    type=\"text\" required/>\r\n                                </Form.Group>\r\n                                <Form.Group id = \"allergies\">\r\n                                <Form.Label>Allergies</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Allergies}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setAllergies(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"demographics\">\r\n                                <Form.Label>Demographics</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Demographics}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDemographics(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"diagnoses\">\r\n                                <Form.Label>Diagnoses</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Diagnoses}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setDiagnoses(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"labResults\">\r\n                                <Form.Label>Lab Results</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.LabResults}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setLabResults(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"medicalHistory\">\r\n                                <Form.Label>Medical History</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.MedicalHistory}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setMedicalHistory(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Form.Group id = \"vitals\">\r\n                                <Form.Label>Vitals</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    defaultValue={md.Vitals}\r\n                                    disabled = {fieldsDisabled}\r\n                                    rows = {3}\r\n                                    onChange={(e) => setVitals(e.target.value)}\r\n                                    required\r\n                                />\r\n                                </Form.Group>\r\n                                <Button onClick={(e)=> onEdit()}className=\"w-100 my-2\" disabled={editDisabled}>Edit</Button>\r\n                                <Button type=\"submit\" className=\"w-100 my-2\" disabled={fieldsDisabled}>Update Medical Record</Button>\r\n                                <Button href = {`${path}`} disabled = {fieldsDisabled} className=\"w-100 my-2\">Cancel</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMedicalRecord\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\TransferMedicalRecord.js",["510","511","512","513","514"],"import React,{useState} from 'react';\r\nimport { Card, Container, Button, Form, Alert } from 'react-bootstrap';\r\nimport {Link, useLocation, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport SearchBar from '../Patient/searchBar';\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction TransferMedicalRecord() {\r\n    const {state} = useLocation()\r\n    const {md} = state\r\n    const history = useHistory();\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [searchDoc, setSearchDoc] = useState(\"\");\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Doctors\")\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setDoctors(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     async function transferRecords(email){\r\n        await firestore.collection(\"Medical Records\").doc(md.id).update({\r\n           AssignedDoc : email\r\n        })\r\n        .then(() => {\r\n            alert(\"Transferred Successfully!\");\r\n            history.push(\"/MedDoc/PatientProfile\");\r\n         })\r\n     }\r\n\r\n     let filteredDoc = doctors.filter(doc =>{\r\n         return doc.Name.toLowerCase().includes(searchDoc);\r\n     })\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Card>\r\n                    <Card.Title as=\"h3\" className=\"text-center mt-3\"style={{fontWeight:\"bolder\",\r\n                    textDecoration: \"underline\"\r\n                }}>Transfer Medical Record</Card.Title>\r\n                    <Card.Text className=\"mt-4 ml-3\"style={{fontWeight:\"bolder\"}}>Patient Name : {md.Patient}</Card.Text>\r\n                    <Card.Text className=\"ml-3\" style={{fontWeight:\"bolder\"}}>Medical Record ID : {md.id}</Card.Text>\r\n                    <Card.Title as=\"h4\" className=\"text-center mt-3\">Doctor List</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"1%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setSearchDoc(e.target.value)} placeholder = \"Enter Doctor Name...\"/>\r\n                    </div>\r\n                    <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"80vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Doctor</th>\r\n                                <th scope=\"col\" className=\"text-center\">Transfer Medical Record</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredDoc.map(doc => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{doc.Name}</td>\r\n                                <td className=\"text-center\"> <Button onClick={(e)=>transferRecords(doc.Email)}>Transfer Record</Button></td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                </Card>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransferMedicalRecord\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewPatientProfileUI.js",["515"],"import React,{useState} from 'react'\r\nimport { Card, Container, Button } from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport SearchBar from '../Patient/searchBar';\r\nimport {firestore } from '../firebase';\r\nimport { useAuth } from \"../util/Auth\"\r\n\r\nfunction ViewPatientProfileUI() {\r\n    const { currentUser } = useAuth();\r\n    const [patients, setPatients] = useState([]); \r\n    const [PatientRecs, setPatientRecs] = useState([]);\r\n    const [createSearchVal, setCreateSearchVal] = useState(\"\");\r\n    const [viewSearchVal, setViewSearchVal] = useState(\"\");\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Documents\")\r\n           .where(\"DocEmail\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setPatients(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n            firestore.collection(\"Medical Records\")\r\n            .where(\"AssignedDoc\", \"==\", String(currentUser.email))\r\n           .get()\r\n           .then(function(data){\r\n                console.log(data)\r\n                setPatientRecs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n    const arr = []\r\n    const obj = {}\r\n\r\n    for(const string of patients){\r\n        if(!obj[string.PatientEmail]){\r\n            arr.push(string)\r\n            obj[string.PatientEmail] = true\r\n        }\r\n    }\r\n\r\n    let filteredArr = arr.filter(doc =>{\r\n        return doc.Patient.toLowerCase().includes(createSearchVal)\r\n    })\r\n\r\n    let filteredRec = PatientRecs.filter(doc =>{\r\n        return doc.Patient.toLowerCase().includes(viewSearchVal)\r\n    })\r\n\r\n    return (\r\n        <div>``\r\n            <Container>\r\n                <Card>\r\n                    <Card.Title as = \"h3\" className=\"text-center mt-3\">Create Medical Records For Patient Seen</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"2%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setCreateSearchVal(e.target.value)} placeholder = \"Enter Patient Name...\"/>\r\n                    </div>\r\n                    <Card.Body>\r\n                    <div style={{\r\n                                maxHeight: \"60vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Patient Name</th>\r\n                                <th scope=\"col\" className=\"text-center\">Create Medical Records</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredArr.map(pat => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{pat.Patient}</td>\r\n                                <td className=\"text-center\"> <Link to={{\r\n                        pathname: '/MedDoc/CreateMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button>Create Record</Button></Link></td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n            <Container className=\"mt-5\">\r\n                <Card>\r\n                    <Card.Title as = \"h3\" className=\"text-center mt-3\">View Created Medical Records For Patients</Card.Title>\r\n                    <div style={{\r\n                        marginTop:\"2%\",\r\n                        marginLeft:\"30%\"\r\n                    }}>\r\n                    <SearchBar handleChange={(e) => setViewSearchVal(e.target.value)} placeholder = \"Enter Patient Name...\"/>\r\n                    </div>\r\n                    <Card.Body>\r\n                    <div style={{\r\n                                maxHeight: \"60vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                        <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"violet\",\r\n                                    fontStyle : \"italic\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Patient Name</th>\r\n                                <th scope=\"col\" className=\"text-center\">View/Edit/Transfer Medical Records</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {filteredRec.map(pat => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{pat.Patient}</td>\r\n                                <td className=\"text-center\"> <Link to={{\r\n                        pathname: '/MedDoc/EditMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button>View/Edit Record</Button></Link>\r\n                            <Link to={{\r\n                        pathname: '/MedDoc/TransferMedicalRecord', \r\n                        state:{md: pat}\r\n            }}><Button className = \"mt-2\">Transfer</Button></Link>\r\n                            </td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPatientProfileUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\DocRescheduleUI.js",["516","517"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMedicalRecord.js",["518"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMPUI.js",["519","520","521","522","523","524","525","526","527"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewAllocatedPatientUI.js",["528","529","530"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMedicalCertificate.js",["531","532","533","534","535","536"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\ViewMPUI.js",["537","538","539","540","541","542","543","544","545","546"],"import React,{useState} from 'react';\r\nimport Select from \"react-select\";\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { useAuth } from '../util/Auth';\r\nimport MC from \"./MC\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport {useRouteMatch} from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewMPUI() {\r\n    const {state} = useLocation();\r\n    const {appointment} = state;\r\n    //usestates\r\n    const[medDocs, setMedDocs] = useState([]);\r\n    const[Reason, setReason] = useState(\"\");\r\n    const[LabResult, setLabResult] = useState(\"\");\r\n    const[ConsultFee, setConsultFee] = useState(0);\r\n    const[PrescriptionFee, setPrescriptionFee] = useState(0);\r\n    const [error, setError] = useState(\"\");  \r\n    const[editDisabled, setEditDisabled] = useState(false);\r\n    const[fieldsDisabled, setFieldsDisabled] = useState(true);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [medTests, setMedTests] = useState([]);\r\n\r\n    const {path} = useRouteMatch();\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            firestore.collection(\"Medical Documents\")\r\n            .where(\"appointmentID\",\"==\",appointment.id)\r\n            .get()\r\n            .then(function(data){\r\n               console.log(data)\r\n               setMedDocs(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n            });\r\n        };\r\n        fetchData()\r\n    },[])\r\n\r\n    const document = {...medDocs[0]};\r\n    const assignedMed = [];\r\n    const assignedMedTests = []\r\n\r\n    for(var i = 0; i < medDocs.length; i++)\r\n    {\r\n        for(var j = 0; j < medDocs[i].prescriptions.length; j++)\r\n        {\r\n            assignedMed.push({...medDocs[i].prescriptions[j]});\r\n        }\r\n        for(var j = 0; j < medDocs[i].LabTests.length; j++)\r\n        {\r\n            assignedMedTests.push({...medDocs[i].LabTests[j]});\r\n        }\r\n    }\r\n\r\n    const MPAlert = () => {\r\n        confirmAlert({\r\n          title: 'Congratulations!',\r\n          message: 'Medical profile has been updated successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n    \r\n    function onEdit(){\r\n        setEditDisabled(true);\r\n        setFieldsDisabled(false);\r\n        setReason(document.Reason);\r\n        setLabResult(document.LabResults);\r\n        setConsultFee(document.consultFee);\r\n        setPrescriptionFee(document.prescriptionFee);\r\n        setMedicines(document.prescriptions.map(md => ({...md})));\r\n        setMedTests(document.LabTests.map(md => ({...md})));\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let pFees = 0, tFees = 0;\r\n        for(var i = 0; i < medicines.length; i++)\r\n        {\r\n            pFees += medicines[i].price;\r\n        }\r\n        for(var i = 0; i < medTests.length; i++)\r\n        {\r\n            tFees += medTests[i].price;\r\n        }\r\n        try{\r\n            setError(\"\");\r\n            setFieldsDisabled(true);\r\n            //update data in firestore collection\r\n         firestore.collection(\"Medical Documents\").doc(document.id)\r\n         .update({\r\n            appointmentID: appointment.id,\r\n            Patient: appointment.Patient,\r\n            PatientEmail: appointment.PatientEmail,\r\n            DocEmail: appointment.DocEmail,\r\n            Reason: Reason,\r\n            DateOfVisit: appointment.Date,\r\n            LabResults: LabResult,\r\n            prescriptions: medicines,\r\n            LabTests : medTests,\r\n            prescriptionFee: parseFloat(pFees),\r\n            testFee: parseFloat(tFees),\r\n         })\r\n         .then(() => {\r\n            MPAlert()\r\n         })\r\n        }\r\n        catch(error){\r\n            setError(error.message);\r\n        }\r\n        setFieldsDisabled(true);\r\n        setEditDisabled(false);\r\n    }\r\n\r\n    const drugList = [\r\n        { label: 'Medicine1', value: 'Medicine1', price: 10 },\r\n        { label: 'Medicine2', value: 'Medicine2', price: 10 },\r\n        { label: 'Medicine3', value: 'Medicine3', price: 10 },\r\n        { label: 'Medicine4', value: 'Medicine4', price: 10 },\r\n        { label: 'Medicine5', value: 'Medicine5' , price: 10},\r\n        { label: 'Medicine6', value: 'Medicine6' , price: 10},\r\n        { label: 'Medicine7', value: 'Medicine7', price: 10 },\r\n        { label: 'Medicine8', value: 'Medicine8', price: 10 },\r\n        { label: 'Medicine9', value: 'Medicine9', price: 10 },\r\n        { label: 'Medicine10', value: 'Medicine10', price: 10 },\r\n        { label: 'Medicine11', value: 'Medicine11' , price: 10},\r\n        { label: 'Medicine12', value: 'Medicine12' , price: 10},\r\n        { label: 'Medicine13', value: 'Medicine13', price: 10 },\r\n        { label: 'Medicine14', value: 'Medicine14', price: 10 },\r\n        { label: 'Medicine15', value: 'Medicine15', price: 10 },\r\n        { label: 'Medicine16', value: 'Medicine16', price: 10 },\r\n        { label: 'Medicine17', value: 'Medicine17' , price: 10},\r\n        { label: 'Medicine18', value: 'Medicine18' , price: 10},\r\n        { label: 'Medicine19', value: 'Medicine19', price: 10 },\r\n        { label: 'Medicine20', value: 'Medicine20', price: 10 },\r\n        { label: 'Medicine21', value: 'Medicine21', price: 10 },\r\n        { label: 'Medicine22', value: 'Medicine22', price: 10 },\r\n        { label: 'Medicine23', value: 'Medicine23' , price: 10},\r\n        { label: 'Medicine24', value: 'Medicine24' , price: 10},\r\n      ];\r\n\r\n      const medicalTests = [\r\n        { label: 'Blood Test', value: 'Blood Test', price: 100 },\r\n        { label: 'X Ray Scan', value: 'X Ray Scan', price: 120 },\r\n        { label: 'MRI Scan', value: 'MRI Scan', price: 220 },\r\n        { label: 'Brain Scan', value: 'Brain Scan', price: 120 },\r\n        { label: 'CT Scan', value: 'CT Scan', price: 220 },\r\n        { label: 'Kidney Function Test', value: 'Kidney Function Test', price: 150 },\r\n        { label: 'Liver Function Test', value: 'Liver Function Test', price: 150 },\r\n        { label: 'Malabsorption Test', value: 'Malabsorption Test' , price: 80},\r\n        { label: 'Pregnancy Test', value: 'Pregnancy Test' , price: 50 },\r\n        { label: 'Syphillis Test', value: 'Syphillis Test', price: 75 },\r\n        { label: 'Toxicology Test', value: 'Toxicology Test', price: 100 },\r\n        { label: 'Urinanalysis', value: 'Urinanalysis', price: 10 },\r\n        { label: 'Mammograhy', value: 'Mammograhy', price: 250 },\r\n        { label: 'Ultrasound', value: 'Ultrasound' , price: 150},\r\n        { label: 'Endoscopy', value: 'Endoscopy' , price: 200},\r\n        { label: 'Skin Test', value: 'Skin Test', price: 200 },\r\n        { label: 'Semen Analysis', value: 'Semen Analysis', price: 100 },\r\n      ];\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            <Container className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"w-100\" style={{Width: \"60%\"}}>\r\n            <Card>\r\n            <h2 className= \"text-center mb-4 mt-3\">Create Medical Profile</h2>\r\n             <Card.Body>\r\n             {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id = \"Name\">\r\n                    <Form.Label>Patient Name</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.Patient} \r\n                        disabled = {true} \r\n                        type=\"text\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"VisitDate\">\r\n                    <Form.Label>Date of Visit</Form.Label>\r\n                    <Form.Control \r\n                        defaultValue = {document.DateOfVisit} \r\n                        disabled = {true} \r\n                        type=\"date\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"reason\">\r\n                    <Form.Label>Reason for Visit</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.Reason}\r\n                        disabled = {fieldsDisabled}\r\n                        rows = {3}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Prescriptions</Form.Label>\r\n                        <Select options={drugList}\r\n                        isMulti\r\n                        isDisabled={fieldsDisabled}\r\n                        value={!fieldsDisabled ? medicines : assignedMed}\r\n                        onChange = {opt => setMedicines(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Prescription(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {!fieldsDisabled ? (medicines.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )):(assignedMed.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Medical Tests</Form.Label>\r\n                        <Select options={medicalTests}\r\n                        isMulti\r\n                        isDisabled={fieldsDisabled}\r\n                        value={!fieldsDisabled ? medTests : assignedMedTests}\r\n                        onChange = {opt => setMedTests(opt ? (opt.map(doc => ({...doc}))):[])}/>\r\n                        <div style={{\r\n                                marginTop: \"1%\",\r\n                                maxHeight: \"50vh\",\r\n                                overflowY: \"scroll\",\r\n                            }}>\r\n                            <table className=\"table table-bordered\">\r\n                        <thead>\r\n                                <tr style={{\r\n                                    backgroundColor:\"#808080\",\r\n                                    color: \"white\",\r\n                                    fontStyle : \"italic\",\r\n                                    fontSize: \"1.1rem\"\r\n                                }}>\r\n                                <th scope=\"col\" colSpan=\"3\" width=\"78%\">Medical Test(s)</th>\r\n                                <th scope=\"col\" className=\"text-center\">Price ($)</th>\r\n                                </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {!fieldsDisabled ? (medTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        )):(assignedMedTests.map(md => \r\n                            <tr>\r\n                                <td colSpan=\"3\">{md.value}</td>\r\n                                <td className=\"text-center\">{md.price}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group id = \"LabResult\">\r\n                    <Form.Label>Lab Results</Form.Label>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        defaultValue = {document.LabResults}\r\n                        disabled = {fieldsDisabled}\r\n                        rows = {3}\r\n                        onChange={(e) => setLabResult(e.target.value)}\r\n                        required\r\n                    />\r\n                    </Form.Group>\r\n                    <hr/>\r\n                    <Link to={{\r\n                        pathname: '/MedDoc/ViewMC', \r\n                        state:{appointment: appointment}\r\n            }}><Button className=\"w-100 my-2\">View MC</Button></Link>\r\n                    <Button onClick={(e)=> onEdit()}className=\"w-100 my-2\" disabled={editDisabled}>Edit</Button>\r\n                    <Button type=\"submit\"className=\"w-100 my-2\" disabled={fieldsDisabled}>Update</Button>\r\n                    <Button href = {`${path}`} disabled = {fieldsDisabled} className=\"w-100 my-2\">Cancel</Button>\r\n                </Form>\r\n                \r\n             </Card.Body>\r\n             </Card>\r\n             </div>\r\n             </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMPUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\CreateMC.js",["547","548","549","550","551","552","553","554"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CancelAppointmentUI.js",["555","556","557","558","559","560"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\MedAdmRoute.js",["561"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nfunction MedAdmRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"Medical Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to respctive homepage */}\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/MedDoc\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n       {role === \"Patient\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/Patient\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"System Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/sysadm\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedAdmRoute\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\PatientViewArticle.js",["562"],"import React, {Component} from 'react'\r\nimport classes from './ViewArticle.module.css'\r\nimport parse from 'html-react-parser'\r\nimport {Container} from 'reactstrap'\r\nimport {firestore, removeImageFromStorage} from '../../firebase'\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer'\r\n\r\n\r\nlet cross = document.createElement('div');\r\n\r\nclass PatientViewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            isLoaded: false,\r\n\r\n        }\r\n        console.log(this.props)\r\n    }\r\n\r\n    // This method is executed after render method has been finished\r\n    // Handle 2 cases: 1st state is to parse the state to ViewArticle.js\r\n    // 2nd state is to handle the URL bar so we need to receive our URL and\r\n    // to write data\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: '/'})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    deleteArticle(aid){\r\n        var desertRef = removeImageFromStorage.refFromURL(this.state.article.featureImage)\r\n        firestore.collection('HealthArticles').doc(aid).delete().then(()=>{\r\n            this.props.history.push({pathname: '/Patient/ViewHealthArticle'})\r\n            alert(\"Article has been deleted successfully!\")\r\n        }).catch(err => alert(err))\r\n        desertRef.delete().then(function(){\r\n            console.log('file deleted')\r\n        }).catch(function(error){\r\n            console.log('error')\r\n        })\r\n    }\r\n        \r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() +'/'+ (date.getMonth()+1) + '/' + date.getDate() \r\n     }\r\n     \r\n    render(){\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div>\r\n                    <IdleTimerContainer></IdleTimerContainer>\r\n                    <Container>\r\n                        <div className={classes.Article}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img className={classes.Image}\r\n                                    src={this.state.article.featureImage}\r\n                                    alt={this.state.article.title}\r\n                                />\r\n                                <div className={classes.ArticleInfo}>\r\n                                    <h1 className={classes.Title}>\r\n                                        {this.state.article.title}\r\n                                    </h1>\r\n                                    <div className={classes.Date}>\r\n                                        {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ArticleMain}>\r\n                                {parse(this.state.article.content)}\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default (PatientViewArticle)","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticle.js",["563","564"],"import React, {Component} from 'react'\r\nimport classes from './ViewArticle.module.css'\r\nimport parse from 'html-react-parser'\r\nimport {Container} from 'reactstrap'\r\nimport {firestore, removeImageFromStorage} from '../../firebase'\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer'\r\n\r\n\r\n\r\nlet cross = document.createElement('div');\r\n\r\nclass ViewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            isLoaded: false,\r\n\r\n        }\r\n        console.log(this.props)\r\n    }\r\n\r\n    // This method is executed after render method has been finished\r\n    // Handle 2 cases: 1st state is to parse the state to ViewArticle.js\r\n    // 2nd state is to handle the URL bar so we need to receive our URL and\r\n    // to write data\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: '/'})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    deleteArticle(aid){\r\n        var desertRef = removeImageFromStorage.refFromURL(this.state.article.featureImage)\r\n        firestore.collection('HealthArticles').doc(aid).delete().then(()=>{\r\n            this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n            alert(\"Article has been deleted successfully!\")\r\n        }).catch(err => alert(err))\r\n        desertRef.delete().then(function(){\r\n            console.log('file deleted')\r\n        }).catch(function(error){\r\n            console.log('error')\r\n        })\r\n    }\r\n        \r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() +'/'+ (date.getMonth()+1) + '/' + date.getDate() \r\n     }\r\n     \r\n    render(){\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                    <Container>\r\n                        <div className={classes.Article}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img className={classes.Image}\r\n                                    src={this.state.article.featureImage}\r\n                                    alt={this.state.article.title}\r\n                                />\r\n                                <div className={classes.ArticleInfo}>\r\n                                    <h1 className={classes.Title}>\r\n                                        {this.state.article.title}\r\n                                    </h1>\r\n                                    <div className={classes.Date}>\r\n                                        {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ArticleMain}>\r\n                                {parse(this.state.article.content)}\r\n                            </div>\r\n                            <a onClick={() => {window.location.href=\"/MedDoc/edit-article\"}} className=\"btn btn-success\">Edit</a>\r\n                            <button onClick = {this.deleteArticle.bind(this, this.state.article.id)}class = \"btn btn-danger\">Delete</button>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default (ViewArticle)","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorProfile.js",["565"],"import React, { Component } from 'react'\r\nimport {withRouter, Link} from \"react-router-dom\";\r\nimport {Accordion, Card, Button} from \"react-bootstrap\"\r\nimport PatientComment from './PatientComment';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nclass DoctorProfile extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            doctor: {},\r\n            isLoaded : false,\r\n            showComments: false,\r\n            comments: []\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('doctor')){\r\n                this.setState({\r\n                    doctor: this.props.location.state.doctor\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoaded){\r\n            return (      \r\n              <div>\r\n                  <IdleTimerContainer></IdleTimerContainer>\r\n                    <div className=\"card w-150\">\r\n                        <div className=\"row no-gutters\">\r\n                        <div className=\"col-auto\">\r\n                            <img src={this.state.doctor.Image} width={300} heigth={250} className=\"img-fluid\" alt=\"\"/>\r\n                        </div>\r\n            <div className=\"col text-center w-75 \">\r\n                <div className=\"card-block px-2\">\r\n                    <h1 className=\"card-title text-center text-muted\">{this.state.doctor.Name}</h1>\r\n                    <p className=\"card-title text-center text-muted\">{this.state.doctor.Specialist}</p>\r\n                    <p className=\"card-text text-center text-muted\">Department : {this.state.doctor.Department}</p>\r\n                    <Link to={{\r\n                   pathname: '/Patient/bookAppointment', \r\n                   state:{doctor: this.state.doctor}\r\n            }}><a href=\"\" className=\"btn btn-primary \">Book Appointment</a></Link>\r\n                    {/* <a href=\"/Patient/appointmentForm\" className=\"btn btn-primary \">Book Appointment</a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style={{backgroundColor:\"#E5E5E5\"}} className=\"card-footer w-100 text-muted\">\r\n            Your Health is our priority\r\n        </div>\r\n  </div>\r\n                    <div>\r\n                        <hr style={{\r\n                                color: \"#eee\",\r\n                                height: \"1px\"\r\n                            }}/>\r\n                    </div>\r\n                    <Accordion defaultActiveKey=\"0\" className=\"my-5 d-flex justify-content-center\">\r\n                    <Card className= \"w-75\">\r\n                    <Card.Img variant=\"top\" src=\"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\" height=\"100px\" />\r\n                        <Card.Header style={{backgroundColor:\"#E5E5E5\"}} className=\"text-center\">\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                         <h4><b>BIOGRAPHY</b></h4>\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body style={{backgroundColor:\"#fff\"}}>{this.state.doctor.Information}</Card.Body>\r\n                     </Accordion.Collapse>\r\n                    </Card>\r\n                    </Accordion>\r\n\r\n                    <Accordion defaultActiveKey=\"0\" className=\"my-5 d-flex justify-content-center\">\r\n                    <Card className= \"w-75\">\r\n                    <Card.Img variant=\"top\" src=\"https://www.flaticon.com/svg/static/icons/svg/2987/2987903.svg\" height=\"100px\" />\r\n                        <Card.Header style={{backgroundColor:\"#E5E5E5\"}} className=\"text-center\">\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        <h4><b>QUALIFICATION</b></h4>\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>{this.state.doctor.Education}</Card.Body>\r\n                     </Accordion.Collapse>\r\n                    </Card>\r\n                    </Accordion>\r\n\r\n            \r\n                    <PatientComment email={this.state.doctor.Email} id = {this.state.doctor.id} /> \r\n                           \r\n                                      \r\n          </div>                                      \r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n  }                  \r\n\r\nexport default withRouter(DoctorProfile)\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\EditArticle\\EditArticle.js",["566","567","568"],"import React, {Component} from 'react'\r\nimport {Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button} from 'reactstrap'\r\nimport classes from './EditArticle.module.css'\r\nimport Compressor from 'compressorjs'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport { firestore, storageRef } from '../../firebase';\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\n\r\nconst Quill = ReactQuill.Quill\r\nconst BlockEmbed = Quill.import('blots/block/embed')\r\n\r\nclass EditArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article:{ //List of attributes for article\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(), //current date of this moment\r\n                featureImage: '', //Upload feature Image for the article later on\r\n                lastModified: new Date(),\r\n                createUserID: '' //Check whether the user has the permisson to edit the article\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: ''})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{'header': '1'}, {'header': '2'}, {'font': []}],\r\n                [{size: []}],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{'list': 'ordered'}, {'list': 'bullet'},\r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                ['link', 'image'],\r\n                ['clean'], ['code-block']\r\n            ],\r\n        },\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    }\r\n\r\n    formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'indent',\r\n        'link',\r\n        'image',\r\n        'video',\r\n        'code-block','audio'\r\n    ]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article, //operator to change the title\r\n                title:value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n            ...this.state.article,\r\n            content:value\r\n            } \r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article\r\n        //article.createUserID = this.props.auth.uid\r\n        firestore.collection(\"HealthArticles\").doc(this.state.article.id)\r\n                 .set(article)\r\n                 .then(res=>{\r\n                     alert(\"Article has been created successfully!\")\r\n                     this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n                 })\r\n                 .catch(err => alert(err))\r\n    }\r\n\r\n    fileCompress = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            new Compressor(file, {\r\n                file: 'File',\r\n                quality: 0.5,\r\n                maxWidth: 640,\r\n                maxHeight: 640,\r\n                success(file){\r\n                    return resolve({ //return promise by using resolve\r\n                        success: true,\r\n                        file: file\r\n                    })\r\n                },\r\n                error(err){\r\n                    return resolve({\r\n                        success: false,\r\n                        message: err\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadImageCallBack = (e, file) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0] //receive files\r\n            const fileName = uuidv4()\r\n            storageRef.child(\"HealthArticles/\" + fileName).put(file) //uuidv4 is our file names\r\n                      .then(async snapshot => { //contain uploaded image, size of image, path of image\r\n                        //Receive download link\r\n                        const downloadURL = await storageRef.child(\"HealthArticles/\" + fileName).getDownloadURL()\r\n                        resolve({\r\n                            success: true,\r\n                            data: {link: downloadURL}\r\n                        })\r\n                      })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl={9} lg={9} md={8} sm={12} xs={12}>\r\n                            <h2 className={classes.SectionTitle}>Edit Article</h2>\r\n                            <FormGroup>\r\n                                <Label ClassName={classes.Label}>Title</Label>\r\n                                <Input type = 'text' name='articleTitle' id='articleTitle'\r\n                                        placeholder= '' required onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                        value={this.state.article.title}\r\n                                        required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <ReactQuill\r\n                                    ref={(el) => this.quill = el}\r\n                                    value={this.state.article.content}\r\n                                    onChange={(e) => this.onChangeArticleContent(e)}\r\n                                    theme='snow'\r\n                                    modules={this.modules} //customize reactquill layout\r\n                                    formats={this.formats} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col xl={3} lg={3} md={4} sm={12} xs={12}>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    Article Setting\r\n                                </CardHeader>\r\n                                <CardBody>           \r\n                                    <FormGroup>\r\n                                    <Label className={classes.Label}>Feature Image</Label>\r\n                                    <Input type=\"file\" accept=\"image/*\" className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e)\r\n                                        if (uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeatureImage: true,\r\n                                                article: {\r\n                                                    ...this.state.article,\r\n                                                    featureImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    </Input>\r\n                                    {\r\n                                        this.state.hasFeatureImage? //If True\r\n                                            <img src={this.state.article.featureImage} className ={classes.FeatureImg} /> :''\r\n                                    }\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Button color='danger'\r\n                                            onClick={(e) => this.submitArticle()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>               \r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                        </Col>                       \r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditArticle","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ResAppointmentUI.js",["569"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\MAHomepageUI.js",["570","571","572","573"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorScheduleUI.js",["574","575","576","577","578","579"],"import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as s from './ViewDoctorSchedule.styles';\r\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {firestore } from '../firebase';\r\nimport moment from 'moment';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer';\r\n\r\nfunction ViewDoctorScheduleUI()\r\n{\r\n   {/* department dropdown list */}\r\n   const options = [\r\n      {\"id\": 1,\r\n      \"value\": \"Anesthesiology\",\r\n      \"label\": \"Anesthesiology\"\r\n      },\r\n\r\n      {\"id\": 2,\r\n      \"value\": \"Cardiology\", \r\n      \"label\": \"Cardiology\"\r\n      },\r\n\r\n      {\"id\": 3,\r\n      \"value\": \"Dermatology\", \r\n      \"label\": \"Dermatology\"\r\n      },\r\n\r\n      {\"id\": 4,\r\n      \"value\": \"Endocrinology\", \r\n      \"label\": \"Endocrinology\"\r\n      },\r\n\r\n      {\"id\": 5,\r\n      \"value\": \"Gastroenterology\", \r\n      \"label\": \"Gastroenterology\"\r\n      },\r\n\r\n      {\"id\": 6,\r\n      \"value\": \"General Practitioner (Non-specialist)\", \r\n      \"label\": \"General Practitioner (Non-specialist)\"\r\n      },\r\n\r\n      {\"id\": 7,\r\n      \"value\": \"Haematology\", \r\n      \"label\": \"Haematology\"\r\n      },\r\n\r\n      {\"id\": 8,\r\n      \"value\": \"Immunology\", \r\n      \"label\": \"Immunology\"\r\n      },\r\n\r\n      {\"id\": 9,\r\n      \"value\": \"Infectious Diseases\", \r\n      \"label\": \"Infectious Diseases\"\r\n      },\r\n\r\n      {\"id\": 10,\r\n      \"value\": \"Neurology\", \r\n      \"label\": \"Neurology\"\r\n      },\r\n\r\n      {\"id\": 11,\r\n      \"value\": \"Oncology\", \r\n      \"label\": \"Oncology\"\r\n      },\r\n\r\n      {\"id\": 12,\r\n      \"value\": \"Orthopaedic\", \r\n      \"label\": \"Orthopaedic\"\r\n      },\r\n\r\n      {\"id\": 13,\r\n      \"value\": \"Psychiatry\", \r\n      \"label\": \"Psychiatry\"\r\n      },\r\n\r\n      {\"id\": 14,\r\n      \"value\": \"Rheumatology\", \r\n      \"label\": \"Rheumatology\"\r\n      },\r\n\r\n      {\"id\": 15,\r\n      \"value\": \"Urology\", \r\n      \"label\": \"Urology\"\r\n      }\r\n   ];\r\n\r\n   const currentDate = new Date();\r\n\r\n   // State ------------------------------------------\r\n   const [selectedOptions, setSelectedOptions] = useState([]);\r\n   const [startDate, setStartDate] = useState(new Date());\r\n   const [appointments, setAppointments] = useState([]);\r\n   const [doctor, setDoctor] = useState([]);\r\n\r\n   // Effect ---------------------------------------\r\n   useEffect(() => {\r\n      setSelectedOptions([{label: \"All\", value: \"*\"}, ...options]);\r\n   }, []);\r\n\r\n   // convert 12hr clock to 24hour clock\r\n   const convertTime12to24 = time12h => {\r\n      const [time, modifier] = time12h.split(\" \");\r\n     \r\n      let [hours, minutes] = time.split(\":\");\r\n     \r\n      if (hours === \"12\") {\r\n        hours = \"00\";\r\n      }\r\n     \r\n      if (modifier === \"PM\") {\r\n        hours = parseInt(hours, 10) + 12;\r\n      }\r\n     \r\n      return `${hours}:${minutes}`;\r\n   };\r\n\r\n   // Retrieve Data from Firebase\r\n   useEffect(() => {\r\n      const fetchData = async () => {\r\n         firestore.collection(\"Appointment\")\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n            setAppointments(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n          })\r\n         firestore.collection(\"Medical Doctors\")\r\n         .get()\r\n         .then(function(data){\r\n            console.log(data)\r\n            setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n         })\r\n      };\r\n      fetchData();\r\n   }, []);\r\n\r\n   const handleDeptChange = (value) => {\r\n      this.props.onSelectDepartment(value);\r\n   }\r\n\r\n   function onChange (value, event) {\r\n      if (event.action === \"select-option\" && event.option.value === \"*\") {\r\n          this.setState(this.options);\r\n      }\r\n\r\n      else if (event.action === \"deselect-option\" && event.option.value === \"*\") {\r\n          this.setState([]);\r\n      }\r\n\r\n      else if (event.action === \"deselect-option\") {\r\n          this.setState(value.filter((o) => o.value !== \"*\"));\r\n      }\r\n\r\n      else if (value.length === this.options.length - 1) {\r\n          this.setState(this.options);\r\n      }\r\n\r\n      else {\r\n          this.setState(value);\r\n      } \r\n\r\n   }\r\n\r\n   // filter and sort array\r\n   const filterList = [...selectedOptions]\r\n                     .sort((a, b) => a.value > b.value ? 1 : -1)\r\n                     .map((item) => item.value )\r\n                     .filter((item) => item !== \"*\");\r\n\r\n   var appList = [];\r\n\r\n   // Get Appointment\r\n   for (var i = 0; i < filterList.length; i++)\r\n   {\r\n      if (i === 0)\r\n      {\r\n         appList = [];\r\n      }\r\n\r\n      appList.push(<s.departmentHeader> {filterList[i]} </s.departmentHeader>);\r\n\r\n      for (var a = 0; a < doctor.length; a++)\r\n      {\r\n         var temp = filterList[i].toString().concat(\"\\uF7FF\");\r\n         if (doctor[a].Department >= filterList[i] && doctor[a].Department <= temp)\r\n         {\r\n            appList.push(<h4> {doctor[a].Name} </h4>)\r\n            var tempAppointment = [...appointments]\r\n                              .filter((item) => item.Date === String(moment(startDate).format('YYYY-MM-DD')))\r\n                              .filter((item) => item.DocEmail === doctor[a].Email)\r\n                              .sort((a, b) => convertTime12to24(a.Timeslot.substring(0, 8)) > convertTime12to24(b.Timeslot.substring(0, 8)) ? 1 : -1)\r\n            \r\n            for (var b = 0; b < tempAppointment.length; b++)\r\n            {\r\n               if (Date.parse(startDate) - Date.parse(currentDate) > 0)\r\n               {\r\n                  appList.push(<s.appCard>\r\n                                 <h5> Patient: {tempAppointment[b].Patient} </h5>\r\n                                 <p> Time Slot: {tempAppointment[b].Timeslot} </p>\r\n                                 <Link to = {{pathname: '/MedAdm/Reschedule/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Reschedule </s.resButton></Link>\r\n                                 &nbsp; &nbsp; &nbsp; \r\n                                 <Link to = {{pathname: '/MedAdm/Cancel/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Cancel </s.resButton></Link>\r\n                              </s.appCard>\r\n                              )\r\n               }\r\n\r\n               else if (Date.parse(startDate) == Date.parse(currentDate))\r\n               {\r\n                  appList.push(<s.appCard>\r\n                     <h5> Patient: {tempAppointment[b].Patient} </h5>\r\n                     <p> Time Slot: {tempAppointment[b].Timeslot} </p>\r\n                     <Link to = {{pathname: '/MedAdm/Reschedule/', state:{appointment: tempAppointment[b]}}}>\r\n                     <s.resButton> Reschedule </s.resButton></Link>\r\n                     &nbsp; &nbsp; &nbsp; \r\n\r\n                     <Link to = {{pathname: '/MedAdm/Cancel/', state:{appointment: tempAppointment[b]}}}>\r\n                     <s.resButton> Cancel </s.resButton></Link>\r\n                     &nbsp; &nbsp; &nbsp; \r\n                     \r\n                     <Link to = {{pathname: '/MedAdm/Create/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Create Follow Up Appointment </s.resButton></Link>\r\n                  </s.appCard>\r\n                  )\r\n               }\r\n\r\n               else \r\n               {\r\n                  appList.push(<s.appCard>\r\n                     <h5> Patient: {tempAppointment[b].Patient} </h5>\r\n                     <p> Time Slot: {tempAppointment[b].Timeslot} </p>\r\n                     <Link to = {{pathname: '/MedAdm/Create/', state:{appointment: tempAppointment[b]}}}>\r\n                                 <s.resButton> Create Follow Up Appointment </s.resButton></Link>\r\n                  </s.appCard>\r\n                  )\r\n               }\r\n            }\r\n            \r\n            appList.push(<br />)\r\n         }\r\n      }\r\n\r\n      appList.push(<hr/>)\r\n   }\r\n\r\n\r\n   const sendReminder = async (e) =>\r\n   {\r\n      if (Date.parse(startDate) - Date.parse(currentDate) > 0)\r\n      {\r\n         for (var i = 0; i < filterList.length; i++)\r\n         {\r\n            if (i === 0)\r\n            {\r\n               appList = [];\r\n            }\r\n\r\n            for (var a = 0; a < doctor.length; a++)\r\n            {\r\n               var temp = filterList[i].toString().concat(\"\\uF7FF\");\r\n               if (doctor[a].Department >= filterList[i] && doctor[a].Department <= temp)\r\n               {\r\n                  var tempAppointment = [...appointments]\r\n                                    .filter((item) => item.Date === String(moment(startDate).format('YYYY-MM-DD')))\r\n                                    .filter((item) => item.DocEmail === doctor[a].Email);\r\n                  \r\n                  for (var b = 0; b < tempAppointment.length; b++)\r\n                  {\r\n                     // Send email to user\r\n                     let details = {\r\n                        date: tempAppointment[b].Date,\r\n                        doctor: tempAppointment[b].Doctor,\r\n                        timeslot: tempAppointment[b].Timeslot,\r\n                        user: tempAppointment[b].Patient,\r\n                        email: tempAppointment[b].PatientEmail,\r\n                        department: doctor[a].Department\r\n                     };\r\n                     let response = await fetch(\"http://localhost:5000/sendReminder\", {\r\n                           method: \"POST\",\r\n                           headers: {\r\n                              \"Content-Type\": \"application/json;charset=utf-8\"\r\n                           },\r\n                           body: JSON.stringify(details)\r\n                     });\r\n                     let result = await response.json();\r\n                     console.log(result.status);\r\n                  }\r\n               }\r\n            }\r\n         }\r\n         alert (\"Reminder Send\");\r\n      }\r\n\r\n      else\r\n      {\r\n         alert(\"Unable to Send Reminder to Past Appointment\");\r\n      }\r\n\r\n   } \r\n\r\n   return (\r\n      <div>\r\n         <IdleTimerContainer></IdleTimerContainer>\r\n         {/* department selection*/}\r\n         <div style={{display:'inline-flex'}}>\r\n            <s.headerLabel>Department:</s.headerLabel>\r\n            <ReactMultiSelectCheckboxes \r\n            options={[{label: \"All\", value: \"*\"}, ...options]}\r\n            value={selectedOptions}\r\n            onChange={onChange}\r\n            setState={setSelectedOptions}/>\r\n         </div>\r\n         <br />\r\n\r\n         {/* date selection */}\r\n         <div style={{display:'inline-flex'}}>\r\n            <s.headerLabel>Date:</s.headerLabel>\r\n            <DatePicker \r\n            todayButton=\"Navigate to Today\"\r\n            selected={startDate} \r\n            onChange={date => setStartDate(date)}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            cursor= \"pointer\"\r\n            />\r\n         </div>\r\n         <br/>\r\n\r\n         {/* Send Reminder Button */}\r\n         <s.newButton onClick={sendReminder}> Send Reminder </s.newButton>\r\n         &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n         <br/> <br/>\r\n         <s.docSchedule>\r\n            <h3> Date: {startDate.toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'}).replace(/ /g, '-')} </h3>\r\n            <br/>\r\n            {/*display doctor schedule*/}\r\n            <div style={{backgroundColor:\"#488AC7\"}}>\r\n               {appList.map(item => (\r\n                  <s.appDetails>\r\n                  {item}\r\n                  </s.appDetails>\r\n               ))}\r\n            </div>\r\n         </s.docSchedule>\r\n      </div>\r\n   );\r\n}\r\n \r\n\r\nexport default ViewDoctorScheduleUI","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\CreateFollowUpUI.js",["580"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ViewArticle\\ViewArticleMedAdm.js",["581","582"],"import React, {Component} from 'react'\r\nimport classes from './ViewArticle.module.css'\r\nimport parse from 'html-react-parser'\r\nimport {Container} from 'reactstrap'\r\nimport {firestore, removeImageFromStorage} from '../../firebase'\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer'\r\n\r\n\r\n\r\nlet cross = document.createElement('div');\r\n\r\nclass ViewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            isLoaded: false,\r\n\r\n        }\r\n        console.log(this.props)\r\n    }\r\n\r\n    // This method is executed after render method has been finished\r\n    // Handle 2 cases: 1st state is to parse the state to ViewArticle.js\r\n    // 2nd state is to handle the URL bar so we need to receive our URL and\r\n    // to write data\r\n    componentDidMount(){\r\n        if(typeof this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true //Check if our article is loaded\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        firestore.collection('HealthArticles')\r\n                  .doc(aid)\r\n                  .get()\r\n                  .then(doc => {\r\n                      if(doc.exists){\r\n                          this.setState({\r\n                              article: doc.data()\r\n                          }, () => {\r\n                              this.setState({\r\n                                  isLoaded: true\r\n                              })\r\n                          })\r\n                      } else{\r\n                          this.props.history.push({pathname: '/'})\r\n                      }\r\n                  })\r\n\r\n    }\r\n\r\n    deleteArticle(aid){\r\n        var desertRef = removeImageFromStorage.refFromURL(this.state.article.featureImage)\r\n        firestore.collection('HealthArticles').doc(aid).delete().then(()=>{\r\n            this.props.history.push({pathname: '/MedAdm/ViewHealthArticle'})\r\n            alert(\"Article has been deleted successfully!\")\r\n        }).catch(err => alert(err))\r\n        desertRef.delete().then(function(){\r\n            console.log('file deleted')\r\n        }).catch(function(error){\r\n            console.log('error')\r\n        })\r\n    }\r\n        \r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() +'/'+ (date.getMonth()+1) + '/' + date.getDate() \r\n     }\r\n     \r\n    render(){\r\n        if(this.state.isLoaded){\r\n            return (\r\n                <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                    <Container>\r\n                        <div className={classes.Article}>\r\n                            <div className={classes.ImageContainer}>\r\n                                <img className={classes.Image}\r\n                                    src={this.state.article.featureImage}\r\n                                    alt={this.state.article.title}\r\n                                />\r\n                                <div className={classes.ArticleInfo}>\r\n                                    <h1 className={classes.Title}>\r\n                                        {this.state.article.title}\r\n                                    </h1>\r\n                                    <div className={classes.Date}>\r\n                                        {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.ArticleMain}>\r\n                                {parse(this.state.article.content)}\r\n                            </div>\r\n                            <a onClick={() => {window.location.href=\"/MedAdm/edit-article\"}} className=\"btn btn-success\">Edit</a>\r\n                            <button onClick = {this.deleteArticle.bind(this, this.state.article.id)}class = \"btn btn-danger\">Delete</button>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default (ViewArticle)","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticle.js",["583","584","585"],"import React, {Component} from 'react';\r\nimport {Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport classes from './NewArticle.module.css';\r\nimport Compressor from 'compressorjs';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { firestore, storageRef } from '../../firebase';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer';\r\n\r\nconst Quill = ReactQuill.Quill\r\nconst BlockEmbed = Quill.import('blots/block/embed')\r\n\r\nclass NewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article:{ //List of attributes for article\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(), //current date of this moment\r\n                featureImage: '', //Upload feature Image for the article later on\r\n                lastModified: new Date(),\r\n                createUserID: '' //Check whether the user has the permisson to edit the article\r\n            }\r\n        }\r\n    }\r\n\r\n    modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{'header': '1'}, {'header': '2'}, {'font': []}],\r\n                [{size: []}],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{'list': 'ordered'}, {'list': 'bullet'},\r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                ['link', 'image'],\r\n                ['clean'], ['code-block']\r\n            ],\r\n        },\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    }\r\n\r\n    formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'indent',\r\n        'link',\r\n        'image',\r\n        'video',\r\n        'code-block','audio'\r\n    ]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article, //operator to change the title\r\n                title:value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n            ...this.state.article,\r\n            content:value\r\n            } \r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article\r\n        //article.createUserID = this.props.auth.uid\r\n        firestore.collection(\"HealthArticles\")\r\n                 .add(article)\r\n                 .then(res=>{\r\n                     alert(\"Article has been created successfully!\")\r\n                     this.props.history.push({pathname: '/MedDoc/ViewHealthArticle'})\r\n                 })\r\n                 .catch(err => alert(err))\r\n    }\r\n\r\n    fileCompress = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            new Compressor(file, {\r\n                file: 'File',\r\n                quality: 0.5,\r\n                maxWidth: 640,\r\n                maxHeight: 640,\r\n                success(file){\r\n                    return resolve({ //return promise by using resolve\r\n                        success: true,\r\n                        file: file\r\n                    })\r\n                },\r\n                error(err){\r\n                    return resolve({\r\n                        success: false,\r\n                        message: err\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadImageCallBack = (e, file) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0] //receive files\r\n            const fileName = uuidv4()\r\n            storageRef.child(\"HealthArticles/\" + fileName).put(file) //uuidv4 is our file names\r\n                      .then(async snapshot => { //contain uploaded image, size of image, path of image\r\n                        //Receive download link\r\n                        const downloadURL = await storageRef.child(\"HealthArticles/\" + fileName).getDownloadURL()\r\n                        resolve({\r\n                            success: true,\r\n                            data: {link: downloadURL}\r\n                        })\r\n                      })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl={9} lg={9} md={8} sm={12} xs={12}>\r\n                            <h2 className={classes.SectionTitle}>New Article</h2>\r\n                            <FormGroup>\r\n                                <Label ClassName={classes.Label}>Title</Label>\r\n                                <Input type = 'text' name='articleTitle' id='articleTitle'\r\n                                        placeholder= '' required onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                        value={this.state.article.title}\r\n                                        required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <ReactQuill\r\n                                    ref={(el) => this.quill = el}\r\n                                    value={this.state.article.content}\r\n                                    onChange={(e) => this.onChangeArticleContent(e)}\r\n                                    theme=\"snow\"\r\n                                    modules={this.modules} //customize reactquill layout\r\n                                    formats={this.formats} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col xl={3} lg={3} md={4} sm={12} xs={12}>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    Article Setting\r\n                                </CardHeader>\r\n                                <CardBody>           \r\n                                    <FormGroup>\r\n                                    <Label className={classes.Label}>Feature Image</Label>\r\n                                    <Input type=\"file\" accept=\"image/*\" className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e)\r\n                                        if (uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeatureImage: true,\r\n                                                article: {\r\n                                                    ...this.state.article,\r\n                                                    featureImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    </Input>\r\n                                    {\r\n                                        this.state.hasFeatureImage? //If True\r\n                                            <img src={this.state.article.featureImage} className ={classes.FeatureImg} /> :''\r\n                                    }\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Button color='danger'\r\n                                            onClick={(e) => this.submitArticle()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>               \r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                        </Col>                       \r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewArticle","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\NewArticle\\NewArticleMedAdm.js",["586","587","588"],"import React, {Component} from 'react';\r\nimport {Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport classes from './NewArticle.module.css';\r\nimport Compressor from 'compressorjs';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { firestore, storageRef } from '../../firebase';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport IdleTimerContainer from '../../util/IdleTimerContainer';\r\n\r\nconst Quill = ReactQuill.Quill\r\nconst BlockEmbed = Quill.import('blots/block/embed')\r\n\r\nclass NewArticle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            article:{ //List of attributes for article\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(), //current date of this moment\r\n                featureImage: '', //Upload feature Image for the article later on\r\n                lastModified: new Date(),\r\n                createUserID: '' //Check whether the user has the permisson to edit the article\r\n            }\r\n        }\r\n    }\r\n\r\n    modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{'header': '1'}, {'header': '2'}, {'font': []}],\r\n                [{size: []}],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{'list': 'ordered'}, {'list': 'bullet'},\r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                ['link', 'image'],\r\n                ['clean'], ['code-block']\r\n            ],\r\n        },\r\n        clipboard: {\r\n            matchVisual: false,\r\n        },\r\n    }\r\n\r\n    formats = [\r\n        'header',\r\n        'font',\r\n        'size',\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        'blockquote',\r\n        'list',\r\n        'bullet',\r\n        'indent',\r\n        'link',\r\n        'image',\r\n        'video',\r\n        'code-block','audio'\r\n    ]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article, //operator to change the title\r\n                title:value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n            ...this.state.article,\r\n            content:value\r\n            } \r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article\r\n        //article.createUserID = this.props.auth.uid\r\n        firestore.collection(\"HealthArticles\")\r\n                 .add(article)\r\n                 .then(res=>{\r\n                     alert(\"Article has been created successfully!\")\r\n                     this.props.history.push({pathname: '/MedAdm/ViewHealthArticle'})\r\n                 })\r\n                 .catch(err => alert(err))\r\n    }\r\n\r\n    fileCompress = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            new Compressor(file, {\r\n                file: 'File',\r\n                quality: 0.5,\r\n                maxWidth: 640,\r\n                maxHeight: 640,\r\n                success(file){\r\n                    return resolve({ //return promise by using resolve\r\n                        success: true,\r\n                        file: file\r\n                    })\r\n                },\r\n                error(err){\r\n                    return resolve({\r\n                        success: false,\r\n                        message: err\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    uploadImageCallBack = (e, file) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0] //receive files\r\n            const fileName = uuidv4()\r\n            storageRef.child(\"HealthArticles/\" + fileName).put(file) //uuidv4 is our file names\r\n                      .then(async snapshot => { //contain uploaded image, size of image, path of image\r\n                        //Receive download link\r\n                        const downloadURL = await storageRef.child(\"HealthArticles/\" + fileName).getDownloadURL()\r\n                        resolve({\r\n                            success: true,\r\n                            data: {link: downloadURL}\r\n                        })\r\n                      })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <IdleTimerContainer></IdleTimerContainer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xl={9} lg={9} md={8} sm={12} xs={12}>\r\n                            <h2 className={classes.SectionTitle}>New Article</h2>\r\n                            <FormGroup>\r\n                                <Label ClassName={classes.Label}>Title</Label>\r\n                                <Input type = 'text' name='articleTitle' id='articleTitle'\r\n                                        placeholder= '' required onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                        value={this.state.article.title}\r\n                                        required\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <ReactQuill\r\n                                    ref={(el) => this.quill = el}\r\n                                    value={this.state.article.content}\r\n                                    onChange={(e) => this.onChangeArticleContent(e)}\r\n                                    theme=\"snow\"\r\n                                    modules={this.modules} //customize reactquill layout\r\n                                    formats={this.formats} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col xl={3} lg={3} md={4} sm={12} xs={12}>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    Article Setting\r\n                                </CardHeader>\r\n                                <CardBody>           \r\n                                    <FormGroup>\r\n                                    <Label className={classes.Label}>Feature Image</Label>\r\n                                    <Input type=\"file\" accept=\"image/*\" className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e)\r\n                                        if (uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeatureImage: true,\r\n                                                article: {\r\n                                                    ...this.state.article,\r\n                                                    featureImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    </Input>\r\n                                    {\r\n                                        this.state.hasFeatureImage? //If True\r\n                                            <img src={this.state.article.featureImage} className ={classes.FeatureImg} /> :''\r\n                                    }\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Button color='danger'\r\n                                            onClick={(e) => this.submitArticle()}\r\n                                        >\r\n                                            Submit\r\n                                        </Button>               \r\n                                    </FormGroup>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n                        </Col>                       \r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewArticle","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\SAHomepageUI.js",["589","590","591","592","593","594","595","596","597","598"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\changePwUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\util\\SystemAdminRoute.js",["599"],"import React,{useState} from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nfunction SystemAdminRoute({ component: Component, role, ...rest }) {\r\n    return (\r\n        <div>\r\n        {role === \"System Admin\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Component {...props} />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n        {/* //route back to patient homepage */}\r\n        {role === \"Medical Doctor\" && (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n            return (<Redirect to=\"/MedDoc\" />)\r\n        }}\r\n        ></Route>\r\n        )}\r\n\r\n       {role === \"Patient\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/Patient\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        {role === \"Medical Admin\" && (\r\n       <Route\r\n       {...rest}\r\n       render={props => {\r\n           return (<Redirect to=\"/MedAdm\" />)\r\n       }}\r\n       ></Route>\r\n       )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SystemAdminRoute\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllAccountUI.js",["600","601","602","603","604","605"],"import React,{useState}  from 'react'\r\nimport { firestore } from '../firebase';\r\nimport {UserInput} from './UserInput'\r\nimport {StaffInput} from './StaffInput'\r\nimport SearchBar from './searchBar';\r\nimport DropDown from './dropDownBar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\n\r\nfunction ViewAllAccountUI() \r\n{\r\n   const [users, setUsers] = useState([])\r\n   const [search, setSearch] = useState(\"\")\r\n   const [loading, setLoading] = useState(false)\r\n   const [DropDownn, setDropDownn] = useState(\"All\");\r\n   const [radio, setRadio] = useState(\"All\");\r\n   let history = useHistory();\r\n\r\n   React.useEffect(() => {\r\n   \r\n      const fetchData = async () => {\r\n         const db = firestore\r\n         const data = await db.collection('Users').get()\r\n         setUsers(data.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n\r\n   let filteredUser = users.filter(user => {\r\n      if (DropDownn === \"All\" && DropDownn === \"Select A User by...\")\r\n         return user\r\n      else if (DropDownn === \"Patient\")\r\n         return ((user.Role === DropDownn) && (user.Email.toLowerCase().includes(search.toLowerCase())))\r\n      else if (DropDownn === \"Medical Doctor\")\r\n       return ((user.Role === DropDownn) && (user.Email.toLowerCase().includes(search.toLowerCase())))\r\n      else if (DropDownn === \"Medical Admin\")\r\n         return ((user.Role === DropDownn) && (user.Email.toLowerCase().includes(search.toLowerCase())))\r\n      else if (DropDownn === \"System Admin\")\r\n         return ((user.Role === DropDownn) && (user.Email.toLowerCase().includes(search.toLowerCase())))\r\n      return user.Email.toLowerCase().includes(search.toLowerCase())\r\n  })\r\n  \r\n\r\n   return(\r\n      <>\r\n      <div class = \"jumbotron jumbotron-fluid\">\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n         <div class = \"container\">\r\n            <h1 class = \"display-4 text-center\">Accounts</h1>\r\n         </div>\r\n      </div>\r\n         {/* search bar */}\r\n         <div\r\n            style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"center\",\r\n                   alignItems: \"center\"\r\n               }}\r\n         >\r\n            <SearchBar handleChange={(e) => setSearch(e.target.value)} placeholder = \"Enter a user by Email...\"/>\r\n         </div>\r\n\r\n         {/* drop down */}\r\n         <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                }}>\r\n                <DropDown handleChange={(e) => setDropDownn(e.target.value)} placeholder=\"Select an option\" /> \r\n         </div>       \r\n         <div\r\n        style={{\r\n               display: \"flex\",\r\n               justifyContent: \"center\",\r\n               alignItems: \"center\",\r\n               marginBottom: \"20px\",\r\n               fontWeight: \"bold\"\r\n           }}\r\n     >\r\n     </div>       \r\n      \r\n      <div className = \"row\">\r\n         <div className = \"col-md-12\">\r\n\r\n            <table className = \"table table-borderless table-stripped\">\r\n               <thead className = \"thead-light\" >\r\n                  <tr>\r\n                     <th>Name</th>\r\n                     <th>NRIC</th>\r\n                     <th>Address</th>\r\n                     <th>Date Of Birth</th>\r\n                     <th>Email Address</th>\r\n                     <th>Telephone</th>\r\n                     <th>Role</th>\r\n                     <th>Actions</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  \r\n                     {filteredUser.map(users => (\r\n                        <tr>\r\n                           {users.Name ? (<td>{users.Name}</td>):(<td>{users.FirstName} {users.LastName}</td>)} \r\n                            \r\n                           {users.NRIC ? (<td>{users.NRIC}</td>):(<td>-</td>)}\r\n                           {users.Address ? (<td>{users.Address}</td>):(<td>-</td>)}\r\n                           {users.DOB ? (<td>{users.DOB}</td>):(<td>-</td>)}\r\n                           <td>{users.Email}</td>\r\n                           {users.Telephone ? (<td>{users.Telephone}</td>):(<td>-</td>)}\r\n                           <td>{users.Role}</td>\r\n                           {/* <Link to = {{ */}\r\n                              {/* pathname: '/SysAdm/viewIndvAcc', */}\r\n                              {/* state: {user: users} */}\r\n                           {/* }}><Button type = \"submit\">Edit</Button></Link> */}\r\n                           {/* <button onClick={onDelete} class = \"btn btn-danger\">Delete</button> */}\r\n\r\n                        <StaffInput medicalStaff = {users}/>\r\n\r\n                           </tr>\r\n                     ))}                                                                              \r\n               </tbody>\r\n            </table>\r\n         </div>\r\n         \r\n      </div>\r\n     \r\n\r\n\r\n\r\n      \r\n      {/* <ul> */}\r\n         {/* {users.map(users => ( */}\r\n            {/* // <li key = {users.FirstName}> */}\r\n               {/* <UserInput users = {users}/> */}\r\n            {/* </li> */}\r\n         {/* // ))} */}\r\n      {/* </ul> */}\r\n       </>\r\n      \r\n   )\r\n\r\n}\r\n\r\nexport default ViewAllAccountUI","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\CreateAccountUI.js",["606","607","608","609","610"],"import React, { useState, useRef } from 'react'\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom';\r\nimport { auth, firestore, storageRef } from '../firebase';\r\nimport PasswordStrengthIndicator from '../components/PasswordStrengthIndicator';\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport Select from 'react-select';\r\n\r\nfunction CreateAccountUI() {\r\n\r\n   //useStates\r\n   const [fileUrl, setFileUrl] = React.useState(null);\r\n   const [FirstName, setFirstName] = useState(\"\"); \r\n   const [LastName, setLastName] = useState(\"\"); \r\n   const [NRIC, setNRIC] = useState(\"\"); \r\n   const [Email, setEmail] = useState(\"\"); \r\n   const [Role, setRole] = useState(\"\");\r\n   const [specialist, setSpecialist] = useState(\"\"); \r\n   const [information, setInformation] = useState(\"\"); \r\n   const [education, setEducation] = useState(\"\"); \r\n   const [department, setDepartment] = useState(\"\");\r\n   const [disabled, setDisabled] = useState(true) \r\n\r\n\r\n   const [error, setError] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n   const FNameRef = useRef();\r\n   const LNameRef = useRef();\r\n   const EmailRef = useRef();\r\n\r\n \r\n   \r\n\r\n   const onFileChange = async (e) => {\r\n      const file = e.target.files[0];\r\n      const sRef = storageRef\r\n      const fileRef = sRef.child(\"MedicalStaff/\" + file.name);\r\n      await fileRef.put(file);\r\n      setFileUrl(await fileRef.getDownloadURL());\r\n    };\r\n    \r\n\r\n\r\n   const submitCreateAlert = () => {\r\n      confirmAlert({\r\n        title: 'Congratulations!',\r\n        message: 'Account has been created successfully.',\r\n        buttons: [\r\n          {\r\n            label: 'OK',\r\n          },\r\n        ]\r\n      });\r\n    };\r\n\r\n   //handle submit\r\n   const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (Role === \"\" || Role === \"Select A Role\") {\r\n         return setError(\"Not A Valid Role\")\r\n      }\r\n\r\n      try{\r\n         setError(\"\");\r\n         setLoading(true);\r\n         \r\n         await firestore.collection('Users').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            Email: Email.toLowerCase(),\r\n            Role: Role\r\n         })\r\n\r\n         await firestore.collection('Medical Staff').add({\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            Email: Email.toLowerCase(),\r\n            Role: Role\r\n         })\r\n\r\n         if (Role === \"Medical Doctor\"){\r\n            await firestore.collection('Medical Doctors').add({\r\n               Image: fileUrl,\r\n               Name: FirstName + \" \" + LastName,\r\n               Email: Email.toLowerCase(),\r\n               Role: Role,\r\n               Specialist: specialist,\r\n               Education: education,\r\n               Information: information,\r\n               Department: department\r\n            })\r\n            .then(() => {\r\n               submitCreateAlert()\r\n            })\r\n         }\r\n\r\n         if (Role === \"Medical Admin\"){\r\n            await firestore.collection('Medical Administrator').add({\r\n               Name: FirstName + \" \" + LastName,\r\n               Email: Email.toLowerCase(),\r\n               Role: Role\r\n            })\r\n            .then(() => {\r\n               submitCreateAlert()\r\n            })\r\n         }\r\n\r\n         // send email to user\r\n         let details = {\r\n            email: Email.toLowerCase(),\r\n            user: FirstName + \" \" + LastName\r\n         };\r\n         let response = await fetch(\"http://localhost:5000/createAcc\", {\r\n            method: \"POST\",\r\n            headers: {\r\n               \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify(details)\r\n         });\r\n         let result = await response.json();\r\n         console.log(result.status);\r\n      } catch(error){\r\n         return setError(error.message);\r\n         \r\n      }\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setNRIC(\"\");\r\n      setEmail(\"\");\r\n      setError(\"\");\r\n      setLoading(false);\r\n      setRole(\"\");\r\n      setDisabled(false);\r\n      };\r\n\r\n      const departmentList = [\r\n         { label: 'General Practitioner (Non-specialist)', value: 'General Practitioner (Non-specialist)'},\r\n         { label: 'Anesthesiology', value: 'Anesthesiology' },\r\n         { label: 'Cardiology', value: 'Cardiology' },\r\n         { label: 'Dermatology', value: 'Dermatology'},\r\n         { label: 'Endocrinology', value: 'Endocrinology'},\r\n         { label: 'Gastroenterology', value: 'Gastroenterology'},\r\n         { label: 'Haematology', value: 'Haematology' },\r\n         { label: 'Immunology', value: 'Immunology'},\r\n         { label: 'Infectious Diseases', value: 'Infectious Diseases'},\r\n         { label: 'Neurology', value: 'Neurology'},\r\n         { label: 'Oncology', value: 'Oncology'},\r\n         { label: 'Orthopaedic', value: 'Orthopaedic'},\r\n         { label: 'Psychiatry', value: 'Psychiatry'},\r\n         { label: 'Rheumatology', value: 'Rheumatology'},\r\n         { label: 'Urology', value: 'Urology'},\r\n       ];\r\n\r\n   return (\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"500px\"}}>\r\n          <IdleTimerContainer></IdleTimerContainer>\r\n            <Card>\r\n             <Card.Body>\r\n                 <h2 className= \"text-center mb-4\">Create Medical Staff Account</h2>\r\n                 {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit}>\r\n                 <Form.Group id = \"Avatar\">\r\n                  <Form.Label>Upload Image</Form.Label>\r\n                        <Form.Control \r\n                       onChange = {onFileChange}        \r\n                     type=\"file\"/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"FirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={FNameRef}\r\n                        value={FirstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z .]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"LastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                        ref={LNameRef}\r\n                        value={LastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        pattern = \"^[a-z A-Z]+$\"\r\n                        title = \"Please enter character in the range a-z OR A-Z\"\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        ref={EmailRef}\r\n                        value={Email}\r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                        type=\"email\" required/>\r\n                     </Form.Group>\r\n               \r\n\r\n                     <Form.Group id = \"AccountType\">\r\n                        <Form.Label>Role</Form.Label>\r\n                     </Form.Group>\r\n\r\n                     <select placeholder = \"Select A Role\" onChange = {(e)=> setRole(e.target.value)}>\r\n                        <option disabled = \"disabled\" selected = \"selected\">Select A Role</option>\r\n                        <option>Medical Doctor</option>\r\n                        <option>Medical Admin</option>\r\n                     </select>\r\n                     {Role===\"Medical Doctor\"?(\r\n                        <div>\r\n                     <Form.Group id = \"Specialist\">\r\n                     <Form.Label>Specialist</Form.Label>\r\n                     <Form.Control \r\n                     onChange={(e) => setSpecialist(e.target.value)}\r\n                     type=\"text\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Form.Group id = \"Education\">\r\n                     <Form.Label>Education</Form.Label>\r\n                     <Form.Control \r\n                     onChange={(e) => setEducation(e.target.value)}\r\n                     type=\"text\" required/>\r\n\r\n                     </Form.Group>\r\n                     <Form.Group id = \"Information\">\r\n                        <Form.Label>Information</Form.Label>\r\n                        <Form.Control \r\n                        onChange={(e) => setInformation(e.target.value)}\r\n                        type=\"text\" required/>\r\n                     </Form.Group>\r\n\r\n                     <Select options={departmentList}\r\n                     onChange = {(e)=> setDepartment(e.value)}\r\n                        />\r\n                     </div> \r\n                                                              \r\n                     ):null}\r\n                    \r\n\r\n                     <hr  style={{\r\n                                borderColor : '#000000',\r\n                                marginTop : '50px'\r\n                            }}/>\r\n                     <Button className=\"w-100\" type=\"submit\">Create Account</Button>\r\n                     <Button disabled = {disabled} className=\"w-100 my-2\" type=\"submit\" target=\"_blank\" href=\"https://console.firebase.google.com/u/0/project/myappointment-bb30e/authentication/users\">Set Up Authentication</Button>\r\n                 </Form>\r\n             </Card.Body>\r\n            </Card>\r\n            </div>\r\n            </Container>\r\n   )\r\n}\r\n\r\nexport default CreateAccountUI\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewIndividualAccountUI.js",["611","612","613","614","615","616","617","618"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\ViewAllStaffAccount.js",["619","620","621","622","623","624","625","626","627","628","629","630","631","632"],"import React,{useState}  from 'react'\r\nimport { firestore } from '../firebase';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport {StaffInput} from './StaffInput'\r\nimport SearchBar from './searchBar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdleTimerContainer from '../util/IdleTimerContainer'\r\n\r\n\r\nfunction ViewAllStaffAccount() \r\n{\r\n   const [users, setUsers] = useState([])\r\n   const [medicalDocUsers, setMedicalDocUsers] = useState([])\r\n   const [medicalStaff, setMedicalStaff] = useState([])\r\n   const [search, setSearch] = useState(\"\")\r\n   const [loading, setLoading] = useState(false)\r\n   const [filteredUsers, setFilteredUsers] = useState([]);\r\n   let history = useHistory();\r\n   \r\n\r\n   React.useEffect(() => {\r\n   \r\n      const fetchData = async () => {\r\n         const db = firestore\r\n         const data = await db.collection('Medical Staff').get()\r\n         setMedicalStaff(data.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n\r\n         const dataa = await firestore.collection('Users').get()\r\n         setUsers(data.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   const filteredArray =   medicalStaff.filter((user) =>\r\n   user.Email.toLowerCase().includes(search.toLowerCase())\r\n )\r\n\r\n   return(\r\n      <>\r\n      <div class = \"jumbotron jumbotron-fluid\">\r\n      <IdleTimerContainer></IdleTimerContainer>\r\n         <div class = \"container\">\r\n            <h1 class = \"display-4 text-center\">Staff Accounts</h1>\r\n         </div>\r\n      </div>\r\n         {/* search bar */}\r\n         <div\r\n            style={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"center\",\r\n                   alignItems: \"center\"\r\n               }}\r\n         >\r\n            <SearchBar handleChange={(e) => setSearch(e.target.value)} placeholder = \"Search for a user by Email...\"/>\r\n         </div>\r\n                                                                                                                                   \r\n      <div\r\n         style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginBottom: \"20px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n      >\r\n         <input  type = \"radio\" value = \"Test\" onClick = {() => {window.location.href=\"/SysAdm/viewAllStaffAccount\"}}/>Staff\r\n         <input  type = \"radio\" value = \"Test\" onClick = {() => {window.location.href=\"/SysAdm/viewAllAccount\"}}/>All Users\r\n      </div>       \r\n       \r\n      <div className = \"row\">\r\n         <div className = \"col-md-12\">\r\n            <table className = \"table table-borderless table-stripped\">\r\n               <thead className = \"thead-light\" >\r\n                  <tr>\r\n                     <th>Name</th>                                                 \r\n                     <th>Email Address</th>  \r\n                     <th>Role</th>\r\n                     <th>Actions</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  \r\n                     {filteredArray.map(medicalStaff => (\r\n                        <tr>\r\n                           <td>{medicalStaff.FirstName} {medicalStaff.LastName}</td>                                                                                                 \r\n                           <td>{medicalStaff.Email}</td>\r\n                           <td>{medicalStaff.Role}</td>\r\n                        <StaffInput medicalStaff = {medicalStaff} />\r\n                           </tr>\r\n                     ))}                                                                              \r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      </div>\r\n       </>\r\n      \r\n   )\r\n\r\n}\r\n\r\nexport default ViewAllStaffAccount","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\Sidebar\\Sidebar.styles.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\doctorCard.js",["633","634","635","636","637","638"],"import React from 'react'\r\nimport {Form, Button, Card, Container, Alert, Row, Col} from 'react-bootstrap'\r\nimport {Link,} from \"react-router-dom\";\r\nimport TextTruncate from 'react-text-truncate';\r\n\r\nconst DoctorCard = (props) => {\r\n    return(\r\n            <Card className=\"\" style={{ width: '18rem' }}>\r\n               <Link to={{\r\n                   pathname: 'doctorProfile/' + props.data.id, \r\n                   state:{doctor: props.data}\r\n            }}>\r\n               <Card.Img variant=\"top\" src={props.data.Image} height=\"220px\" />\r\n               </Link>\r\n         <Card.Body>\r\n         <Link to={{\r\n                   pathname: 'doctorProfile/' + props.data.id, \r\n                   state:{doctor: props.data}\r\n            }}>\r\n               <Card.Title>{props.data.Name}</Card.Title>\r\n            </Link>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">Department: {props.data.Department}</Card.Subtitle>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">Specialty: {props.data.Specialist}</Card.Subtitle>\r\n            {/* <TextTruncate \r\n               line={3}\r\n               element=\"span\"\r\n               truncateText=\"…\"\r\n               text={props.data.Information}\r\n            /> */}\r\n               <Link to={{pathname: 'doctorProfile/'+props.data.id, state:{doctor: props.data}}}><Button variant=\"primary\">View Profile</Button></Link>\r\n         </Card.Body>\r\n      </Card>\r\n    )\r\n}\r\n\r\nexport default DoctorCard","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalDoctor\\MC.js",["639","640","641"],"import React from 'react'\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport moment from 'moment';\r\n\r\nfunction MC(props) {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <Container className=\"mb-5\">\r\n                <Card style={{backgroundColor:\"#f9ffe8\"}}>\r\n                    <Card.Title  style = {{fontSize: '3rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'bold',\r\n                    marginTop: '5%',\r\n                }}>Medical Certificate</Card.Title>\r\n                <Card.Text className=\"mt-4\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This is to certify that patient</Card.Text>\r\n                <Card.Title className=\"mt-2\" style={{fontSize: \"2rem\",\r\n                fontFamily:'times new roman',\r\n                fontWeight: 'bold',\r\n            }}>{props.name}</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>is unfit for duty for a period of {props.days} days</Card.Text>\r\n            <Card.Title  style = {{fontSize: '2rem',\r\n                    fontFamily: 'times new roman',\r\n                    fontWeight: 'lighter',\r\n                    marginTop: '10px',\r\n                }}>Medical Transcription</Card.Title>\r\n            <Card.Text className=\"mt-2\" style={{fontSize: '1.5rem',\r\n                fontFamily: 'times new roman',\r\n                fontStyle: 'italic',\r\n            }}>This medical certificate has been issued on {moment(props.startDate).format(\"DD/MM/YYYY\")} and is valid till {moment(props.endDate).format(\"DD/MM/YYYY\")}</Card.Text>\r\n            <Card.Img src={props.imageURL}\r\n            style={{maxWidth:\"10%\",\r\n                    maxHeight: \"5%\",\r\n                    marginLeft: \"75%\",\r\n        }}\r\n            ></Card.Img>\r\n            <hr\r\n                 style={{\r\n                    color: 'black',\r\n                    backgroundColor: 'black',\r\n                    height: 3,\r\n                    maxWidth: '20%',\r\n                    align: \"right\",\r\n                    marginLeft:\"70%\"\r\n                }}/>\r\n                <Card.Text className = \"text-right\"\r\n                style ={{\r\n                    fontFamily: 'sans-serif',\r\n                    marginRight: '11%',\r\n                    fontSize: '0.9rem'\r\n                }}\r\n                >{props.doctor.Name}</Card.Text>\r\n                </Card>\r\n                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MC\r\n\r\n","C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\ArticleCard\\ArticleCard.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\Patient\\PatientComment.js",["642","643"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\MedicalAdmin\\ViewDoctorSchedule.styles.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\components\\navbarUI.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\searchBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\dropDownBar.js",[],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\StaffInput.js",["644","645","646","647","648","649","650","651","652","653"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\UserInput.js",["654","655","656","657","658","659","660"],"C:\\Users\\malla\\Desktop\\FYP-folder\\medicalTest\\project\\src\\SystemAdmin\\confirmDelete.js",["661","662","663","664"],"import React,{useState} from 'react'\r\nimport {Link, withRouter, useLocation, useHistory} from 'react-router-dom';\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport { auth, firestore } from '../firebase';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nfunction ConfirmDelete() {\r\n    const [error, setError] = useState(\"\");     // store error message\r\n    const {state} = useLocation();              // access appointment passed from link router\r\n    const {user} = state;                // save appointment data from state\r\n    const history = useHistory();\r\n    const [doctor, setDoctor] = useState([])\r\n    const [medStaff, setMedStaff] = useState([])\r\n    const [medAdm, setMedAdm] = useState([]);\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () =>{\r\n           firestore.collection(\"Medical Doctors\").limit(1)\r\n           .where(\"Email\", \"==\", String(user.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n                 setDoctor(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Medical Staff\").limit(1)\r\n           .where(\"Email\", \"==\", String(user.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setMedStaff(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n\r\n           firestore.collection(\"Medical Administrator\").limit(1)\r\n           .where(\"Email\", \"==\", String(user.Email))\r\n           .get()\r\n           .then(function(data){\r\n              console.log(data)\r\n              setMedAdm(data.docs.map(doc => ({ ...doc.data(), id: doc.id})));\r\n           }); \r\n        };\r\n        fetchData();\r\n     }, [])\r\n\r\n     const deleteAccountAlert = () => {\r\n        confirmAlert({\r\n          title: 'Deleted!',\r\n          message: 'Account was Deleted successfully.',\r\n          buttons: [\r\n            {\r\n              label: 'OK',\r\n            },\r\n          ]\r\n        });\r\n      };\r\n\r\n     const doc = {...doctor[0]}\r\n     const ms = {...medStaff[0]}\r\n     const ma = {...medAdm[0]}\r\n\r\n    //handle submit\r\n   const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n\r\n        try{\r\n            if(user.Role === \"Medical Doctor\")\r\n            {\r\n                await firestore.collection(\"Medical Doctors\").doc(doc.id).delete()\r\n                await firestore.collection(\"Medical Staff\").doc(ms.id).delete()\r\n                await firestore.collection(\"Users\").doc(user.id).delete()\r\n                .then(() =>{\r\n                    deleteAccountAlert();\r\n                })\r\n            }\r\n            if(user.Role === \"Medical Admin\")\r\n            {\r\n                await firestore.collection(\"Medical Administrator\").doc(ma.id).delete()\r\n                await firestore.collection(\"Medical Staff\").doc(ms.id).delete()\r\n                await firestore.collection(\"Users\").doc(user.id).delete()\r\n                .then(() =>{\r\n                    deleteAccountAlert();\r\n                })\r\n            }\r\n            if(user.Role === \"Patient\" || user.Role === \"System Admin\")\r\n            {\r\n                await firestore.collection(\"Users\").doc(user.id).delete()\r\n                .then(() =>{\r\n                    deleteAccountAlert();\r\n                })\r\n            }\r\n        }\r\n        catch(error)\r\n        {\r\n            return setError(error.message);\r\n        }\r\n   }\r\n    return (\r\n        <div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"50vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n          <Card>\r\n             <Card.Body>\r\n                <Card.Title className= \"text-center\">Confirm Delete</Card.Title>\r\n                <label class=\"note\">The following account will be deleted from Database:</label>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                 <Form onSubmit={handleSubmit} className=\"my-4\">\r\n                 <Form.Group id = \"email\">\r\n                        <Form.Label className=\"my-2\">Email</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue ={user.Email}\r\n                        disabled = {true}\r\n                        type=\"text\" required/>\r\n                  </Form.Group>\r\n                  <Form.Group id = \"role\">\r\n                        <Form.Label className=\"my-2\">Role</Form.Label>\r\n                        <Form.Control \r\n                        defaultValue ={user.Role}\r\n                        disabled = {true}\r\n                        type=\"text\" required/>\r\n                  </Form.Group>\r\n                <Button className=\"w-100 my-2\" type=\"submit\">Delete</Button>\r\n                <Button className=\"w-100 my-2\" type=\"submit\" target=\"_blank\" href=\"https://console.firebase.google.com/u/0/project/myappointment-bb30e/authentication/users\">Delete Authentication</Button>\r\n                <Link to={'/SysAdm/viewAllAccount'}>\r\n                    <Button className=\"w-100 my-2\">Return</Button></Link>\r\n                </Form>\r\n                </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmDelete\r\n",{"ruleId":"665","replacedBy":"666"},{"ruleId":"667","replacedBy":"668"},{"ruleId":"669","severity":1,"message":"670","line":30,"column":17,"nodeType":"671","endLine":32,"endColumn":11},{"ruleId":"669","severity":1,"message":"670","line":32,"column":54,"nodeType":"671","endLine":35,"endColumn":11},{"ruleId":"669","severity":1,"message":"670","line":35,"column":59,"nodeType":"671","endLine":38,"endColumn":11},{"ruleId":"669","severity":1,"message":"670","line":38,"column":69,"nodeType":"671","endLine":41,"endColumn":11},{"ruleId":"669","severity":1,"message":"670","line":41,"column":61,"nodeType":"671","endLine":44,"endColumn":11},{"ruleId":"669","severity":1,"message":"670","line":44,"column":62,"nodeType":"671","endLine":47,"endColumn":11},{"ruleId":"669","severity":1,"message":"670","line":47,"column":60,"nodeType":"671","endLine":50,"endColumn":11},{"ruleId":"669","severity":1,"message":"670","line":50,"column":60,"nodeType":"671","endLine":53,"endColumn":11},{"ruleId":"672","severity":1,"message":"673","line":38,"column":12,"nodeType":"674","messageId":"675","endLine":38,"endColumn":25},{"ruleId":"672","severity":1,"message":"676","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":14},{"ruleId":"672","severity":1,"message":"677","line":3,"column":16,"nodeType":"674","messageId":"675","endLine":3,"endColumn":25},{"ruleId":"672","severity":1,"message":"678","line":11,"column":12,"nodeType":"674","messageId":"675","endLine":11,"endColumn":19},{"ruleId":"672","severity":1,"message":"679","line":14,"column":12,"nodeType":"674","messageId":"675","endLine":14,"endColumn":17},{"ruleId":"672","severity":1,"message":"680","line":14,"column":19,"nodeType":"674","messageId":"675","endLine":14,"endColumn":27},{"ruleId":"672","severity":1,"message":"681","line":15,"column":12,"nodeType":"674","messageId":"675","endLine":15,"endColumn":23},{"ruleId":"672","severity":1,"message":"676","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":14},{"ruleId":"672","severity":1,"message":"678","line":24,"column":11,"nodeType":"674","messageId":"675","endLine":24,"endColumn":18},{"ruleId":"672","severity":1,"message":"682","line":25,"column":10,"nodeType":"674","messageId":"675","endLine":25,"endColumn":17},{"ruleId":"672","severity":1,"message":"681","line":38,"column":11,"nodeType":"674","messageId":"675","endLine":38,"endColumn":22},{"ruleId":"683","severity":1,"message":"684","line":42,"column":41,"nodeType":"671","messageId":"685","endLine":42,"endColumn":42,"suggestions":"686"},{"ruleId":"683","severity":1,"message":"687","line":42,"column":58,"nodeType":"671","messageId":"685","endLine":42,"endColumn":59,"suggestions":"688"},{"ruleId":"689","severity":1,"message":"690","line":88,"column":36,"nodeType":"691","messageId":"692","endLine":88,"endColumn":38},{"ruleId":"689","severity":1,"message":"690","line":88,"column":71,"nodeType":"691","messageId":"692","endLine":88,"endColumn":73},{"ruleId":"689","severity":1,"message":"690","line":88,"column":106,"nodeType":"691","messageId":"692","endLine":88,"endColumn":108},{"ruleId":"689","severity":1,"message":"690","line":88,"column":142,"nodeType":"691","messageId":"692","endLine":88,"endColumn":144},{"ruleId":"689","severity":1,"message":"690","line":88,"column":183,"nodeType":"691","messageId":"692","endLine":88,"endColumn":185},{"ruleId":"672","severity":1,"message":"693","line":3,"column":8,"nodeType":"674","messageId":"675","endLine":3,"endColumn":20},{"ruleId":"672","severity":1,"message":"694","line":7,"column":10,"nodeType":"674","messageId":"675","endLine":7,"endColumn":22},{"ruleId":"695","severity":1,"message":"696","line":45,"column":9,"nodeType":"697","endLine":45,"endColumn":11,"suggestions":"698"},{"ruleId":"695","severity":1,"message":"696","line":44,"column":9,"nodeType":"697","endLine":44,"endColumn":11,"suggestions":"699"},{"ruleId":"695","severity":1,"message":"696","line":39,"column":9,"nodeType":"697","endLine":39,"endColumn":11,"suggestions":"700"},{"ruleId":"669","severity":1,"message":"670","line":44,"column":17,"nodeType":"671","endLine":46,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":46,"column":93,"nodeType":"671","endLine":49,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":49,"column":105,"nodeType":"671","endLine":52,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":58,"column":106,"nodeType":"671","endLine":61,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":61,"column":109,"nodeType":"671","endLine":64,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":64,"column":103,"nodeType":"671","endLine":67,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":67,"column":94,"nodeType":"671","endLine":70,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":70,"column":75,"nodeType":"671","endLine":73,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":73,"column":114,"nodeType":"671","endLine":76,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":76,"column":98,"nodeType":"671","endLine":79,"endColumn":13},{"ruleId":"672","severity":1,"message":"701","line":1,"column":8,"nodeType":"674","messageId":"675","endLine":1,"endColumn":14},{"ruleId":"695","severity":1,"message":"696","line":40,"column":9,"nodeType":"697","endLine":40,"endColumn":11,"suggestions":"702"},{"ruleId":"669","severity":1,"message":"670","line":45,"column":17,"nodeType":"671","endLine":47,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":47,"column":98,"nodeType":"671","endLine":50,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":50,"column":110,"nodeType":"671","endLine":53,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":53,"column":120,"nodeType":"671","endLine":56,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":56,"column":118,"nodeType":"671","endLine":59,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":59,"column":129,"nodeType":"671","endLine":62,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":62,"column":120,"nodeType":"671","endLine":65,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":65,"column":109,"nodeType":"671","endLine":68,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":68,"column":94,"nodeType":"671","endLine":71,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":71,"column":74,"nodeType":"671","endLine":74,"endColumn":13},{"ruleId":"669","severity":1,"message":"670","line":74,"column":118,"nodeType":"671","endLine":78,"endColumn":13},{"ruleId":"695","severity":1,"message":"696","line":41,"column":7,"nodeType":"697","endLine":41,"endColumn":9,"suggestions":"703"},{"ruleId":"672","severity":1,"message":"704","line":1,"column":8,"nodeType":"674","messageId":"675","endLine":1,"endColumn":13},{"ruleId":"672","severity":1,"message":"704","line":1,"column":8,"nodeType":"674","messageId":"675","endLine":1,"endColumn":13},{"ruleId":"672","severity":1,"message":"704","line":1,"column":8,"nodeType":"674","messageId":"675","endLine":1,"endColumn":13},{"ruleId":"672","severity":1,"message":"704","line":1,"column":8,"nodeType":"674","messageId":"675","endLine":1,"endColumn":13},{"ruleId":"672","severity":1,"message":"705","line":1,"column":15,"nodeType":"674","messageId":"675","endLine":1,"endColumn":23},{"ruleId":"672","severity":1,"message":"706","line":3,"column":9,"nodeType":"674","messageId":"675","endLine":3,"endColumn":16},{"ruleId":"672","severity":1,"message":"707","line":1,"column":17,"nodeType":"674","messageId":"675","endLine":1,"endColumn":26},{"ruleId":"672","severity":1,"message":"708","line":2,"column":34,"nodeType":"674","messageId":"675","endLine":2,"endColumn":37},{"ruleId":"672","severity":1,"message":"709","line":29,"column":10,"nodeType":"674","messageId":"675","endLine":29,"endColumn":15},{"ruleId":"672","severity":1,"message":"710","line":29,"column":17,"nodeType":"674","messageId":"675","endLine":29,"endColumn":25},{"ruleId":"672","severity":1,"message":"711","line":32,"column":10,"nodeType":"674","messageId":"675","endLine":32,"endColumn":17},{"ruleId":"672","severity":1,"message":"712","line":35,"column":10,"nodeType":"674","messageId":"675","endLine":35,"endColumn":14},{"ruleId":"672","severity":1,"message":"713","line":35,"column":16,"nodeType":"674","messageId":"675","endLine":35,"endColumn":23},{"ruleId":"695","severity":1,"message":"696","line":66,"column":5,"nodeType":"697","endLine":66,"endColumn":7,"suggestions":"714"},{"ruleId":"715","severity":1,"message":"716","line":68,"column":55,"nodeType":"717","messageId":"718","endLine":68,"endColumn":57},{"ruleId":"672","severity":1,"message":"719","line":20,"column":11,"nodeType":"674","messageId":"675","endLine":20,"endColumn":15},{"ruleId":"695","severity":1,"message":"696","line":43,"column":7,"nodeType":"697","endLine":43,"endColumn":9,"suggestions":"720"},{"ruleId":"695","severity":1,"message":"721","line":50,"column":9,"nodeType":"697","endLine":50,"endColumn":11,"suggestions":"722"},{"ruleId":"695","severity":1,"message":"696","line":23,"column":9,"nodeType":"697","endLine":23,"endColumn":11,"suggestions":"723"},{"ruleId":"724","severity":1,"message":"725","line":42,"column":37,"nodeType":"726","endLine":42,"endColumn":133},{"ruleId":"724","severity":1,"message":"725","line":53,"column":33,"nodeType":"726","endLine":53,"endColumn":126},{"ruleId":"724","severity":1,"message":"725","line":64,"column":33,"nodeType":"726","endLine":64,"endColumn":124},{"ruleId":"724","severity":1,"message":"725","line":79,"column":37,"nodeType":"726","endLine":79,"endColumn":136},{"ruleId":"724","severity":1,"message":"725","line":90,"column":33,"nodeType":"726","endLine":90,"endColumn":127},{"ruleId":"695","severity":1,"message":"696","line":23,"column":7,"nodeType":"697","endLine":23,"endColumn":9,"suggestions":"727"},{"ruleId":"672","severity":1,"message":"728","line":16,"column":19,"nodeType":"674","messageId":"675","endLine":16,"endColumn":27},{"ruleId":"695","severity":1,"message":"696","line":29,"column":9,"nodeType":"697","endLine":29,"endColumn":11,"suggestions":"729"},{"ruleId":"672","severity":1,"message":"730","line":2,"column":8,"nodeType":"674","messageId":"675","endLine":2,"endColumn":14},{"ruleId":"672","severity":1,"message":"731","line":3,"column":15,"nodeType":"674","messageId":"675","endLine":3,"endColumn":25},{"ruleId":"672","severity":1,"message":"676","line":6,"column":10,"nodeType":"674","messageId":"675","endLine":6,"endColumn":14},{"ruleId":"672","severity":1,"message":"681","line":15,"column":12,"nodeType":"674","messageId":"675","endLine":15,"endColumn":23},{"ruleId":"672","severity":1,"message":"676","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":14},{"ruleId":"695","severity":1,"message":"732","line":23,"column":7,"nodeType":"697","endLine":23,"endColumn":9,"suggestions":"733"},{"ruleId":"672","severity":1,"message":"731","line":3,"column":15,"nodeType":"674","messageId":"675","endLine":3,"endColumn":25},{"ruleId":"672","severity":1,"message":"676","line":6,"column":10,"nodeType":"674","messageId":"675","endLine":6,"endColumn":14},{"ruleId":"695","severity":1,"message":"696","line":52,"column":9,"nodeType":"697","endLine":52,"endColumn":11,"suggestions":"734"},{"ruleId":"672","severity":1,"message":"731","line":3,"column":15,"nodeType":"674","messageId":"675","endLine":3,"endColumn":25},{"ruleId":"672","severity":1,"message":"735","line":3,"column":40,"nodeType":"674","messageId":"675","endLine":3,"endColumn":50},{"ruleId":"672","severity":1,"message":"706","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":17},{"ruleId":"672","severity":1,"message":"736","line":5,"column":30,"nodeType":"674","messageId":"675","endLine":5,"endColumn":35},{"ruleId":"672","severity":1,"message":"676","line":6,"column":10,"nodeType":"674","messageId":"675","endLine":6,"endColumn":14},{"ruleId":"695","severity":1,"message":"732","line":23,"column":7,"nodeType":"697","endLine":23,"endColumn":9,"suggestions":"737"},{"ruleId":"695","severity":1,"message":"732","line":22,"column":7,"nodeType":"697","endLine":22,"endColumn":9,"suggestions":"738"},{"ruleId":"672","severity":1,"message":"739","line":23,"column":11,"nodeType":"674","messageId":"675","endLine":23,"endColumn":17},{"ruleId":"695","severity":1,"message":"696","line":23,"column":9,"nodeType":"697","endLine":23,"endColumn":11,"suggestions":"740"},{"ruleId":"724","severity":1,"message":"725","line":43,"column":37,"nodeType":"726","endLine":43,"endColumn":132},{"ruleId":"724","severity":1,"message":"725","line":54,"column":33,"nodeType":"726","endLine":54,"endColumn":122},{"ruleId":"724","severity":1,"message":"725","line":70,"column":37,"nodeType":"726","endLine":70,"endColumn":135},{"ruleId":"724","severity":1,"message":"725","line":81,"column":33,"nodeType":"726","endLine":81,"endColumn":123},{"ruleId":"672","severity":1,"message":"705","line":1,"column":15,"nodeType":"674","messageId":"675","endLine":1,"endColumn":23},{"ruleId":"672","severity":1,"message":"741","line":23,"column":12,"nodeType":"674","messageId":"675","endLine":23,"endColumn":18},{"ruleId":"672","severity":1,"message":"742","line":23,"column":20,"nodeType":"674","messageId":"675","endLine":23,"endColumn":29},{"ruleId":"672","severity":1,"message":"743","line":2,"column":35,"nodeType":"674","messageId":"675","endLine":2,"endColumn":39},{"ruleId":"672","severity":1,"message":"736","line":2,"column":41,"nodeType":"674","messageId":"675","endLine":2,"endColumn":46},{"ruleId":"672","severity":1,"message":"744","line":3,"column":9,"nodeType":"674","messageId":"675","endLine":3,"endColumn":13},{"ruleId":"672","severity":1,"message":"745","line":3,"column":40,"nodeType":"674","messageId":"675","endLine":3,"endColumn":53},{"ruleId":"672","severity":1,"message":"706","line":6,"column":10,"nodeType":"674","messageId":"675","endLine":6,"endColumn":17},{"ruleId":"695","severity":1,"message":"696","line":33,"column":9,"nodeType":"697","endLine":33,"endColumn":11,"suggestions":"746"},{"ruleId":"672","severity":1,"message":"745","line":4,"column":40,"nodeType":"674","messageId":"675","endLine":4,"endColumn":53},{"ruleId":"695","severity":1,"message":"696","line":40,"column":9,"nodeType":"697","endLine":40,"endColumn":11,"suggestions":"747"},{"ruleId":"695","severity":1,"message":"748","line":35,"column":7,"nodeType":"697","endLine":35,"endColumn":9,"suggestions":"749"},{"ruleId":"672","severity":1,"message":"731","line":3,"column":15,"nodeType":"674","messageId":"675","endLine":3,"endColumn":25},{"ruleId":"672","severity":1,"message":"735","line":3,"column":40,"nodeType":"674","messageId":"675","endLine":3,"endColumn":50},{"ruleId":"672","severity":1,"message":"706","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":17},{"ruleId":"672","severity":1,"message":"750","line":5,"column":8,"nodeType":"674","messageId":"675","endLine":5,"endColumn":10},{"ruleId":"672","severity":1,"message":"676","line":7,"column":10,"nodeType":"674","messageId":"675","endLine":7,"endColumn":14},{"ruleId":"672","severity":1,"message":"751","line":20,"column":11,"nodeType":"674","messageId":"675","endLine":20,"endColumn":21},{"ruleId":"672","severity":1,"message":"752","line":21,"column":11,"nodeType":"674","messageId":"675","endLine":21,"endColumn":26},{"ruleId":"695","severity":1,"message":"753","line":46,"column":7,"nodeType":"697","endLine":46,"endColumn":9,"suggestions":"754"},{"ruleId":"755","severity":1,"message":"756","line":82,"column":17,"nodeType":"674","messageId":"757","endLine":82,"endColumn":18},{"ruleId":"672","severity":1,"message":"758","line":13,"column":7,"nodeType":"674","messageId":"675","endLine":13,"endColumn":13},{"ruleId":"695","severity":1,"message":"696","line":59,"column":7,"nodeType":"697","endLine":59,"endColumn":9,"suggestions":"759"},{"ruleId":"672","severity":1,"message":"760","line":72,"column":9,"nodeType":"674","messageId":"675","endLine":72,"endColumn":19},{"ruleId":"672","severity":1,"message":"743","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":14},{"ruleId":"672","severity":1,"message":"761","line":2,"column":16,"nodeType":"674","messageId":"675","endLine":2,"endColumn":22},{"ruleId":"672","severity":1,"message":"736","line":2,"column":30,"nodeType":"674","messageId":"675","endLine":2,"endColumn":35},{"ruleId":"672","severity":1,"message":"676","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":14},{"ruleId":"672","severity":1,"message":"730","line":5,"column":8,"nodeType":"674","messageId":"675","endLine":5,"endColumn":14},{"ruleId":"695","severity":1,"message":"753","line":30,"column":7,"nodeType":"697","endLine":30,"endColumn":9,"suggestions":"762"},{"ruleId":"672","severity":1,"message":"731","line":3,"column":15,"nodeType":"674","messageId":"675","endLine":3,"endColumn":25},{"ruleId":"672","severity":1,"message":"735","line":3,"column":40,"nodeType":"674","messageId":"675","endLine":3,"endColumn":50},{"ruleId":"672","severity":1,"message":"706","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":17},{"ruleId":"672","severity":1,"message":"750","line":5,"column":8,"nodeType":"674","messageId":"675","endLine":5,"endColumn":10},{"ruleId":"672","severity":1,"message":"676","line":7,"column":10,"nodeType":"674","messageId":"675","endLine":7,"endColumn":14},{"ruleId":"672","severity":1,"message":"751","line":20,"column":11,"nodeType":"674","messageId":"675","endLine":20,"endColumn":21},{"ruleId":"672","severity":1,"message":"752","line":21,"column":11,"nodeType":"674","messageId":"675","endLine":21,"endColumn":26},{"ruleId":"695","severity":1,"message":"763","line":41,"column":7,"nodeType":"697","endLine":41,"endColumn":9,"suggestions":"764"},{"ruleId":"755","severity":1,"message":"765","line":53,"column":17,"nodeType":"674","messageId":"757","endLine":53,"endColumn":18},{"ruleId":"755","severity":1,"message":"756","line":89,"column":17,"nodeType":"674","messageId":"757","endLine":89,"endColumn":18},{"ruleId":"672","severity":1,"message":"736","line":4,"column":30,"nodeType":"674","messageId":"675","endLine":4,"endColumn":35},{"ruleId":"672","severity":1,"message":"744","line":7,"column":9,"nodeType":"674","messageId":"675","endLine":7,"endColumn":13},{"ruleId":"672","severity":1,"message":"731","line":7,"column":15,"nodeType":"674","messageId":"675","endLine":7,"endColumn":25},{"ruleId":"672","severity":1,"message":"706","line":8,"column":10,"nodeType":"674","messageId":"675","endLine":8,"endColumn":17},{"ruleId":"672","severity":1,"message":"676","line":10,"column":10,"nodeType":"674","messageId":"675","endLine":10,"endColumn":14},{"ruleId":"672","severity":1,"message":"766","line":10,"column":27,"nodeType":"674","messageId":"675","endLine":10,"endColumn":37},{"ruleId":"695","severity":1,"message":"753","line":41,"column":7,"nodeType":"697","endLine":41,"endColumn":9,"suggestions":"767"},{"ruleId":"672","severity":1,"message":"768","line":51,"column":9,"nodeType":"674","messageId":"675","endLine":51,"endColumn":12},{"ruleId":"672","severity":1,"message":"730","line":2,"column":8,"nodeType":"674","messageId":"675","endLine":2,"endColumn":14},{"ruleId":"672","severity":1,"message":"731","line":3,"column":15,"nodeType":"674","messageId":"675","endLine":3,"endColumn":25},{"ruleId":"672","severity":1,"message":"676","line":6,"column":10,"nodeType":"674","messageId":"675","endLine":6,"endColumn":14},{"ruleId":"672","severity":1,"message":"681","line":15,"column":13,"nodeType":"674","messageId":"675","endLine":15,"endColumn":24},{"ruleId":"672","severity":1,"message":"769","line":17,"column":12,"nodeType":"674","messageId":"675","endLine":17,"endColumn":19},{"ruleId":"672","severity":1,"message":"770","line":17,"column":21,"nodeType":"674","messageId":"675","endLine":17,"endColumn":31},{"ruleId":"672","severity":1,"message":"705","line":1,"column":15,"nodeType":"674","messageId":"675","endLine":1,"endColumn":23},{"ruleId":"672","severity":1,"message":"771","line":9,"column":5,"nodeType":"674","messageId":"675","endLine":9,"endColumn":10},{"ruleId":"672","severity":1,"message":"771","line":10,"column":5,"nodeType":"674","messageId":"675","endLine":10,"endColumn":10},{"ruleId":"724","severity":1,"message":"725","line":106,"column":29,"nodeType":"726","endLine":106,"endColumn":122},{"ruleId":"724","severity":1,"message":"772","line":52,"column":16,"nodeType":"726","endLine":52,"endColumn":56},{"ruleId":"672","severity":1,"message":"773","line":12,"column":7,"nodeType":"674","messageId":"675","endLine":12,"endColumn":17},{"ruleId":"774","severity":1,"message":"775","line":181,"column":41,"nodeType":"776","endLine":181,"endColumn":49},{"ruleId":"777","severity":1,"message":"778","line":220,"column":45,"nodeType":"726","endLine":220,"endColumn":122},{"ruleId":"695","severity":1,"message":"779","line":50,"column":9,"nodeType":"697","endLine":50,"endColumn":11,"suggestions":"780"},{"ruleId":"695","severity":1,"message":"696","line":23,"column":9,"nodeType":"697","endLine":23,"endColumn":11,"suggestions":"781"},{"ruleId":"724","severity":1,"message":"725","line":44,"column":41,"nodeType":"726","endLine":44,"endColumn":131},{"ruleId":"724","severity":1,"message":"725","line":55,"column":41,"nodeType":"726","endLine":55,"endColumn":130},{"ruleId":"724","severity":1,"message":"725","line":67,"column":41,"nodeType":"726","endLine":67,"endColumn":139},{"ruleId":"782","severity":1,"message":"783","line":13,"column":4,"nodeType":"784","messageId":"785","endLine":13,"endColumn":36},{"ruleId":"695","severity":1,"message":"786","line":102,"column":7,"nodeType":"697","endLine":102,"endColumn":9,"suggestions":"787"},{"ruleId":"672","severity":1,"message":"788","line":140,"column":10,"nodeType":"674","messageId":"675","endLine":140,"endColumn":26},{"ruleId":"789","severity":1,"message":"790","line":193,"column":39,"nodeType":"717","messageId":"791","endLine":193,"endColumn":82},{"ruleId":"689","severity":1,"message":"690","line":212,"column":47,"nodeType":"691","messageId":"692","endLine":212,"endColumn":49},{"ruleId":"789","severity":1,"message":"790","line":269,"column":45,"nodeType":"717","messageId":"791","endLine":269,"endColumn":88},{"ruleId":"695","severity":1,"message":"792","line":50,"column":9,"nodeType":"697","endLine":50,"endColumn":11,"suggestions":"793"},{"ruleId":"672","severity":1,"message":"771","line":10,"column":5,"nodeType":"674","messageId":"675","endLine":10,"endColumn":10},{"ruleId":"724","severity":1,"message":"725","line":106,"column":29,"nodeType":"726","endLine":106,"endColumn":122},{"ruleId":"672","severity":1,"message":"773","line":12,"column":7,"nodeType":"674","messageId":"675","endLine":12,"endColumn":17},{"ruleId":"774","severity":1,"message":"775","line":146,"column":41,"nodeType":"776","endLine":146,"endColumn":49},{"ruleId":"777","severity":1,"message":"778","line":185,"column":45,"nodeType":"726","endLine":185,"endColumn":122},{"ruleId":"672","severity":1,"message":"773","line":12,"column":7,"nodeType":"674","messageId":"675","endLine":12,"endColumn":17},{"ruleId":"774","severity":1,"message":"775","line":146,"column":41,"nodeType":"776","endLine":146,"endColumn":49},{"ruleId":"777","severity":1,"message":"778","line":185,"column":45,"nodeType":"726","endLine":185,"endColumn":122},{"ruleId":"672","severity":1,"message":"794","line":2,"column":8,"nodeType":"674","messageId":"675","endLine":2,"endColumn":14},{"ruleId":"672","severity":1,"message":"744","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":14},{"ruleId":"672","severity":1,"message":"676","line":5,"column":21,"nodeType":"674","messageId":"675","endLine":5,"endColumn":25},{"ruleId":"695","severity":1,"message":"696","line":25,"column":9,"nodeType":"697","endLine":25,"endColumn":11,"suggestions":"795"},{"ruleId":"774","severity":1,"message":"775","line":42,"column":37,"nodeType":"776","endLine":42,"endColumn":61},{"ruleId":"724","severity":1,"message":"725","line":46,"column":41,"nodeType":"726","endLine":46,"endColumn":136},{"ruleId":"774","severity":1,"message":"775","line":53,"column":37,"nodeType":"776","endLine":53,"endColumn":61},{"ruleId":"724","severity":1,"message":"725","line":57,"column":41,"nodeType":"726","endLine":57,"endColumn":131},{"ruleId":"774","severity":1,"message":"775","line":64,"column":41,"nodeType":"776","endLine":64,"endColumn":65},{"ruleId":"724","severity":1,"message":"725","line":68,"column":45,"nodeType":"726","endLine":68,"endColumn":143},{"ruleId":"672","severity":1,"message":"705","line":1,"column":15,"nodeType":"674","messageId":"675","endLine":1,"endColumn":23},{"ruleId":"672","severity":1,"message":"796","line":3,"column":9,"nodeType":"674","messageId":"675","endLine":3,"endColumn":18},{"ruleId":"672","severity":1,"message":"678","line":15,"column":11,"nodeType":"674","messageId":"675","endLine":15,"endColumn":18},{"ruleId":"672","severity":1,"message":"797","line":15,"column":20,"nodeType":"674","messageId":"675","endLine":15,"endColumn":30},{"ruleId":"672","severity":1,"message":"798","line":17,"column":11,"nodeType":"674","messageId":"675","endLine":17,"endColumn":16},{"ruleId":"672","severity":1,"message":"799","line":17,"column":18,"nodeType":"674","messageId":"675","endLine":17,"endColumn":26},{"ruleId":"672","severity":1,"message":"682","line":18,"column":8,"nodeType":"674","messageId":"675","endLine":18,"endColumn":15},{"ruleId":"672","severity":1,"message":"735","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":20},{"ruleId":"672","severity":1,"message":"676","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":14},{"ruleId":"672","severity":1,"message":"800","line":5,"column":8,"nodeType":"674","messageId":"675","endLine":5,"endColumn":33},{"ruleId":"672","severity":1,"message":"801","line":17,"column":11,"nodeType":"674","messageId":"675","endLine":17,"endColumn":15},{"ruleId":"672","severity":1,"message":"678","line":28,"column":11,"nodeType":"674","messageId":"675","endLine":28,"endColumn":18},{"ruleId":"672","severity":1,"message":"678","line":27,"column":11,"nodeType":"674","messageId":"675","endLine":27,"endColumn":18},{"ruleId":"672","severity":1,"message":"681","line":32,"column":12,"nodeType":"674","messageId":"675","endLine":32,"endColumn":23},{"ruleId":"672","severity":1,"message":"802","line":33,"column":12,"nodeType":"674","messageId":"675","endLine":33,"endColumn":23},{"ruleId":"672","severity":1,"message":"803","line":34,"column":11,"nodeType":"674","messageId":"675","endLine":34,"endColumn":16},{"ruleId":"672","severity":1,"message":"680","line":34,"column":18,"nodeType":"674","messageId":"675","endLine":34,"endColumn":26},{"ruleId":"672","severity":1,"message":"682","line":44,"column":8,"nodeType":"674","messageId":"675","endLine":44,"endColumn":15},{"ruleId":"695","severity":1,"message":"804","line":77,"column":7,"nodeType":"697","endLine":77,"endColumn":9,"suggestions":"805"},{"ruleId":"672","severity":1,"message":"806","line":80,"column":10,"nodeType":"674","messageId":"675","endLine":80,"endColumn":12},{"ruleId":"672","severity":1,"message":"743","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":14},{"ruleId":"672","severity":1,"message":"761","line":3,"column":16,"nodeType":"674","messageId":"675","endLine":3,"endColumn":22},{"ruleId":"672","severity":1,"message":"807","line":3,"column":24,"nodeType":"674","messageId":"675","endLine":3,"endColumn":28},{"ruleId":"672","severity":1,"message":"736","line":3,"column":30,"nodeType":"674","messageId":"675","endLine":3,"endColumn":35},{"ruleId":"672","severity":1,"message":"808","line":3,"column":37,"nodeType":"674","messageId":"675","endLine":3,"endColumn":46},{"ruleId":"672","severity":1,"message":"679","line":12,"column":11,"nodeType":"674","messageId":"675","endLine":12,"endColumn":16},{"ruleId":"672","severity":1,"message":"809","line":13,"column":11,"nodeType":"674","messageId":"675","endLine":13,"endColumn":26},{"ruleId":"672","severity":1,"message":"810","line":13,"column":28,"nodeType":"674","messageId":"675","endLine":13,"endColumn":46},{"ruleId":"672","severity":1,"message":"678","line":16,"column":11,"nodeType":"674","messageId":"675","endLine":16,"endColumn":18},{"ruleId":"672","severity":1,"message":"797","line":16,"column":20,"nodeType":"674","messageId":"675","endLine":16,"endColumn":30},{"ruleId":"672","severity":1,"message":"811","line":17,"column":11,"nodeType":"674","messageId":"675","endLine":17,"endColumn":24},{"ruleId":"672","severity":1,"message":"812","line":17,"column":26,"nodeType":"674","messageId":"675","endLine":17,"endColumn":42},{"ruleId":"672","severity":1,"message":"682","line":18,"column":8,"nodeType":"674","messageId":"675","endLine":18,"endColumn":15},{"ruleId":"672","severity":1,"message":"813","line":28,"column":16,"nodeType":"674","messageId":"675","endLine":28,"endColumn":21},{"ruleId":"672","severity":1,"message":"743","line":2,"column":9,"nodeType":"674","messageId":"675","endLine":2,"endColumn":13},{"ruleId":"672","severity":1,"message":"808","line":2,"column":29,"nodeType":"674","messageId":"675","endLine":2,"endColumn":38},{"ruleId":"672","severity":1,"message":"736","line":2,"column":40,"nodeType":"674","messageId":"675","endLine":2,"endColumn":45},{"ruleId":"672","severity":1,"message":"708","line":2,"column":47,"nodeType":"674","messageId":"675","endLine":2,"endColumn":50},{"ruleId":"672","severity":1,"message":"814","line":2,"column":52,"nodeType":"674","messageId":"675","endLine":2,"endColumn":55},{"ruleId":"672","severity":1,"message":"815","line":4,"column":8,"nodeType":"674","messageId":"675","endLine":4,"endColumn":20},{"ruleId":"672","severity":1,"message":"743","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":14},{"ruleId":"672","severity":1,"message":"761","line":2,"column":16,"nodeType":"674","messageId":"675","endLine":2,"endColumn":22},{"ruleId":"672","severity":1,"message":"736","line":2,"column":30,"nodeType":"674","messageId":"675","endLine":2,"endColumn":35},{"ruleId":"695","severity":1,"message":"816","line":33,"column":9,"nodeType":"697","endLine":33,"endColumn":11,"suggestions":"817"},{"ruleId":"777","severity":1,"message":"778","line":113,"column":13,"nodeType":"726","endLine":118,"endColumn":17},{"ruleId":"672","severity":1,"message":"743","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":14},{"ruleId":"672","severity":1,"message":"807","line":3,"column":24,"nodeType":"674","messageId":"675","endLine":3,"endColumn":28},{"ruleId":"672","severity":1,"message":"736","line":3,"column":30,"nodeType":"674","messageId":"675","endLine":3,"endColumn":35},{"ruleId":"672","severity":1,"message":"808","line":3,"column":37,"nodeType":"674","messageId":"675","endLine":3,"endColumn":46},{"ruleId":"672","severity":1,"message":"818","line":4,"column":15,"nodeType":"674","messageId":"675","endLine":4,"endColumn":28},{"ruleId":"672","severity":1,"message":"819","line":5,"column":13,"nodeType":"674","messageId":"675","endLine":5,"endColumn":18},{"ruleId":"695","severity":1,"message":"820","line":31,"column":9,"nodeType":"697","endLine":31,"endColumn":11,"suggestions":"821"},{"ruleId":"672","severity":1,"message":"822","line":33,"column":12,"nodeType":"674","messageId":"675","endLine":33,"endColumn":15},{"ruleId":"672","severity":1,"message":"823","line":34,"column":12,"nodeType":"674","messageId":"675","endLine":34,"endColumn":13},{"ruleId":"672","severity":1,"message":"824","line":36,"column":11,"nodeType":"674","messageId":"675","endLine":36,"endColumn":19},{"ruleId":"672","severity":1,"message":"743","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":14},{"ruleId":"672","severity":1,"message":"807","line":3,"column":24,"nodeType":"674","messageId":"675","endLine":3,"endColumn":28},{"ruleId":"672","severity":1,"message":"736","line":3,"column":30,"nodeType":"674","messageId":"675","endLine":3,"endColumn":35},{"ruleId":"672","severity":1,"message":"808","line":3,"column":37,"nodeType":"674","messageId":"675","endLine":3,"endColumn":46},{"ruleId":"672","severity":1,"message":"818","line":4,"column":15,"nodeType":"674","messageId":"675","endLine":4,"endColumn":28},{"ruleId":"672","severity":1,"message":"819","line":5,"column":13,"nodeType":"674","messageId":"675","endLine":5,"endColumn":18},{"ruleId":"695","severity":1,"message":"825","line":31,"column":9,"nodeType":"697","endLine":31,"endColumn":11,"suggestions":"826"},{"ruleId":"672","severity":1,"message":"731","line":2,"column":15,"nodeType":"674","messageId":"675","endLine":2,"endColumn":25},{"ruleId":"672","severity":1,"message":"676","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":14},{"ruleId":"672","severity":1,"message":"682","line":12,"column":11,"nodeType":"674","messageId":"675","endLine":12,"endColumn":18},{"ruleId":"695","severity":1,"message":"804","line":44,"column":9,"nodeType":"697","endLine":44,"endColumn":11,"suggestions":"827"},"no-native-reassign",["828"],"no-negated-in-lhs",["829"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-unused-vars","'deleteAccount' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","'firestore' is defined but never used.","'loading' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'history' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","unnecessaryEscape",["830","831"],"Unnecessary escape character: \\/.",["832","833"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PrivateRoute' is defined but never used.","'AuthProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["834"],["835"],["836"],"'Reeact' is defined but never used.",["837"],["838"],"'React' is defined but never used.","'useState' is defined but never used.","'useAuth' is defined but never used.","'Component' is defined but never used.","'Row' is defined but never used.","'Email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'doctors' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.",["839"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Role' is assigned a value but never used.",["840"],"React Hook React.useEffect has missing dependencies: 'Appointment.DocEmail' and 'currentUser.email'. Either include them or remove the dependency array.",["841"],["842"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["843"],"'setError' is assigned a value but never used.",["844"],"'moment' is defined but never used.","'withRouter' is defined but never used.","React Hook React.useEffect has a missing dependency: 'document.DocEmail'. Either include it or remove the dependency array.",["845"],["846"],"'useHistory' is defined but never used.","'Alert' is defined but never used.",["847"],["848"],"'doctor' is assigned a value but never used.",["849"],"'medRec' is assigned a value but never used.","'setMedRec' is assigned a value but never used.","'Form' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.",["850"],["851"],"React Hook React.useEffect has a missing dependency: 'md.PatientEmail'. Either include it or remove the dependency array.",["852"],"'MC' is defined but never used.","'ConsultFee' is assigned a value but never used.","'PrescriptionFee' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'appointment.DocEmail' and 'appointment.id'. Either include them or remove the dependency array.",["853"],"no-redeclare","'i' is already defined.","redeclared","'Moment' is assigned a value but never used.",["854"],"'sortedPast' is assigned a value but never used.","'Button' is defined but never used.",["855"],"React Hook React.useEffect has a missing dependency: 'appointment.id'. Either include it or remove the dependency array.",["856"],"'j' is already defined.","'storageRef' is defined but never used.",["857"],"'img' is assigned a value but never used.","'patient' is assigned a value but never used.","'setPatient' is assigned a value but never used.","'cross' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'BlockEmbed' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook React.useEffect has missing dependencies: 'appointment.DocEmail' and 'currentUser.email'. Either include them or remove the dependency array.",["858"],["859"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["860"],"'handleDeptChange' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'a'.","unsafeRefs","React Hook React.useEffect has missing dependencies: 'appointment.DocEmail' and 'appointment.PatientEmail'. Either include them or remove the dependency array.",["861"],"'NavBar' is defined but never used.",["862"],"'UserInput' is defined but never used.","'setLoading' is assigned a value but never used.","'radio' is assigned a value but never used.","'setRadio' is assigned a value but never used.","'PasswordStrengthIndicator' is defined but never used.","'NRIC' is assigned a value but never used.","'updateEmail' is assigned a value but never used.","'Users' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'user.Email'. Either include it or remove the dependency array.",["863"],"'ma' is assigned a value but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'medicalDocUsers' is assigned a value but never used.","'setMedicalDocUsers' is assigned a value but never used.","'filteredUsers' is assigned a value but never used.","'setFilteredUsers' is assigned a value but never used.","'dataa' is assigned a value but never used.","'Col' is defined but never used.","'TextTruncate' is defined but never used.","React Hook React.useEffect has missing dependencies: 'currentUser.email' and 'props.email'. Either include them or remove the dependency array.",["864"],"'BrowserRouter' is defined but never used.","'admin' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props.medicalStaff.Email'. Either include it or remove the dependency array.",["865"],"'doc' is assigned a value but never used.","'u' is assigned a value but never used.","'onDelete' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.users.Email'. Either include it or remove the dependency array.",["866"],["867"],"no-global-assign","no-unsafe-negation",{"messageId":"868","fix":"869","desc":"870"},{"messageId":"871","fix":"872","desc":"873"},{"messageId":"868","fix":"874","desc":"870"},{"messageId":"871","fix":"875","desc":"873"},{"desc":"876","fix":"877"},{"desc":"876","fix":"878"},{"desc":"876","fix":"879"},{"desc":"876","fix":"880"},{"desc":"876","fix":"881"},{"desc":"876","fix":"882"},{"desc":"876","fix":"883"},{"desc":"884","fix":"885"},{"desc":"876","fix":"886"},{"desc":"876","fix":"887"},{"desc":"876","fix":"888"},{"desc":"889","fix":"890"},{"desc":"876","fix":"891"},{"desc":"889","fix":"892"},{"desc":"889","fix":"893"},{"desc":"876","fix":"894"},{"desc":"876","fix":"895"},{"desc":"876","fix":"896"},{"desc":"897","fix":"898"},{"desc":"899","fix":"900"},{"desc":"876","fix":"901"},{"desc":"899","fix":"902"},{"desc":"903","fix":"904"},{"desc":"899","fix":"905"},{"desc":"906","fix":"907"},{"desc":"876","fix":"908"},{"desc":"909","fix":"910"},{"desc":"911","fix":"912"},{"desc":"876","fix":"913"},{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},{"desc":"920","fix":"921"},{"desc":"914","fix":"922"},"removeEscape",{"range":"923","text":"924"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"925","text":"926"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"927","text":"924"},{"range":"928","text":"926"},"Update the dependencies array to be: [currentUser.email]",{"range":"929","text":"930"},{"range":"931","text":"930"},{"range":"932","text":"930"},{"range":"933","text":"930"},{"range":"934","text":"930"},{"range":"935","text":"930"},{"range":"936","text":"930"},"Update the dependencies array to be: [Appointment.DocEmail, currentUser.email]",{"range":"937","text":"938"},{"range":"939","text":"930"},{"range":"940","text":"930"},{"range":"941","text":"930"},"Update the dependencies array to be: [document.DocEmail]",{"range":"942","text":"943"},{"range":"944","text":"930"},{"range":"945","text":"943"},{"range":"946","text":"943"},{"range":"947","text":"930"},{"range":"948","text":"930"},{"range":"949","text":"930"},"Update the dependencies array to be: [md.PatientEmail]",{"range":"950","text":"951"},"Update the dependencies array to be: [appointment.DocEmail, appointment.id]",{"range":"952","text":"953"},{"range":"954","text":"930"},{"range":"955","text":"953"},"Update the dependencies array to be: [appointment.id]",{"range":"956","text":"957"},{"range":"958","text":"953"},"Update the dependencies array to be: [appointment.DocEmail, currentUser.email]",{"range":"959","text":"960"},{"range":"961","text":"930"},"Update the dependencies array to be: [options]",{"range":"962","text":"963"},"Update the dependencies array to be: [appointment.DocEmail, appointment.PatientEmail]",{"range":"964","text":"965"},{"range":"966","text":"930"},"Update the dependencies array to be: [user.Email]",{"range":"967","text":"968"},"Update the dependencies array to be: [currentUser.email, props.email]",{"range":"969","text":"970"},"Update the dependencies array to be: [props.medicalStaff.Email]",{"range":"971","text":"972"},"Update the dependencies array to be: [props.users.Email]",{"range":"973","text":"974"},{"range":"975","text":"968"},[1587,1588],"",[1587,1587],"\\",[1604,1605],[1604,1604],[1857,1859],"[currentUser.email]",[1918,1920],[1535,1537],[1483,1485],[1082,1084],[1927,1929],[1645,1647],[2306,2308],"[Appointment.DocEmail, currentUser.email]",[706,708],[794,796],[1010,1012],[785,787],"[document.DocEmail]",[2416,2418],[863,865],[779,781],[724,726],[1309,1311],[1763,1765],[1397,1399],"[md.PatientEmail]",[1962,1964],"[appointment.DocEmail, appointment.id]",[1744,1746],[1144,1146],[1681,1683],"[appointment.id]",[1592,1594],[2315,2317],"[appointment.DocEmail, currentUser.email]",[739,741],[2459,2461],"[options]",[2322,2324],"[appointment.DocEmail, appointment.PatientEmail]",[802,804],[2840,2842],"[user.Email]",[1200,1202],"[currentUser.email, props.email]",[1111,1113],"[props.medicalStaff.Email]",[1100,1102],"[props.users.Email]",[1843,1845]]